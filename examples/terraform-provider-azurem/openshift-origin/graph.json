{
    "edges": [
        {
            "edge_type": 1,
            "source": "[root] azurerm_availability_set.infra",
            "svg_id": "edge_0",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_availability_set.master",
            "svg_id": "edge_1",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_availability_set.node",
            "svg_id": "edge_2",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb.infra_lb",
            "svg_id": "edge_3",
            "target": "[root] azurerm_public_ip.infra_lb_pip"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb.master_lb",
            "svg_id": "edge_4",
            "target": "[root] azurerm_public_ip.openshift_master_pip"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_backend_address_pool.infra_lb",
            "svg_id": "edge_5",
            "target": "[root] azurerm_lb.infra_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_backend_address_pool.master_lb",
            "svg_id": "edge_6",
            "target": "[root] azurerm_lb.master_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_nat_rule.master_lb",
            "svg_id": "edge_7",
            "target": "[root] azurerm_lb.master_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_nat_rule.master_lb",
            "svg_id": "edge_8",
            "target": "[root] var.master_instance_count"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_probe.infra_lb_http_probe",
            "svg_id": "edge_9",
            "target": "[root] azurerm_lb.infra_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_probe.infra_lb_https_probe",
            "svg_id": "edge_10",
            "target": "[root] azurerm_lb.infra_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_probe.master_lb",
            "svg_id": "edge_11",
            "target": "[root] azurerm_lb.master_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_rule.infra_lb_http",
            "svg_id": "edge_12",
            "target": "[root] azurerm_lb_backend_address_pool.infra_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_rule.infra_lb_http",
            "svg_id": "edge_13",
            "target": "[root] azurerm_lb_probe.infra_lb_http_probe"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_rule.infra_lb_https",
            "svg_id": "edge_14",
            "target": "[root] azurerm_lb_backend_address_pool.infra_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_rule.infra_lb_https",
            "svg_id": "edge_15",
            "target": "[root] azurerm_lb_probe.infra_lb_https_probe"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_rule.master_lb",
            "svg_id": "edge_16",
            "target": "[root] azurerm_lb_backend_address_pool.master_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_lb_rule.master_lb",
            "svg_id": "edge_17",
            "target": "[root] azurerm_lb_probe.master_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.bastion_nic",
            "svg_id": "edge_18",
            "target": "[root] azurerm_network_security_group.master_nsg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.bastion_nic",
            "svg_id": "edge_19",
            "target": "[root] azurerm_public_ip.bastion_pip"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.bastion_nic",
            "svg_id": "edge_20",
            "target": "[root] azurerm_subnet.master_subnet"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.infra_nic",
            "svg_id": "edge_21",
            "target": "[root] azurerm_lb_backend_address_pool.infra_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.infra_nic",
            "svg_id": "edge_22",
            "target": "[root] azurerm_network_security_group.infra_nsg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.infra_nic",
            "svg_id": "edge_23",
            "target": "[root] azurerm_subnet.master_subnet"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.infra_nic",
            "svg_id": "edge_24",
            "target": "[root] var.infra_instance_count"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.master_nic",
            "svg_id": "edge_25",
            "target": "[root] azurerm_lb_backend_address_pool.master_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.master_nic",
            "svg_id": "edge_26",
            "target": "[root] azurerm_lb_nat_rule.master_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.master_nic",
            "svg_id": "edge_27",
            "target": "[root] azurerm_network_security_group.master_nsg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.master_nic",
            "svg_id": "edge_28",
            "target": "[root] azurerm_subnet.master_subnet"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.node_nic",
            "svg_id": "edge_29",
            "target": "[root] azurerm_network_security_group.node_nsg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.node_nic",
            "svg_id": "edge_30",
            "target": "[root] azurerm_subnet.node_subnet"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_interface.node_nic",
            "svg_id": "edge_31",
            "target": "[root] var.node_instance_count"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_security_group.infra_nsg",
            "svg_id": "edge_32",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_security_group.infra_nsg",
            "svg_id": "edge_33",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_security_group.master_nsg",
            "svg_id": "edge_34",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_security_group.master_nsg",
            "svg_id": "edge_35",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_security_group.node_nsg",
            "svg_id": "edge_36",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_network_security_group.node_nsg",
            "svg_id": "edge_37",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_public_ip.bastion_pip",
            "svg_id": "edge_38",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_public_ip.bastion_pip",
            "svg_id": "edge_39",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_public_ip.infra_lb_pip",
            "svg_id": "edge_40",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_public_ip.infra_lb_pip",
            "svg_id": "edge_41",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_public_ip.openshift_master_pip",
            "svg_id": "edge_42",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_public_ip.openshift_master_pip",
            "svg_id": "edge_43",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_resource_group.rg",
            "svg_id": "edge_44",
            "target": "[root] provider.azurerm"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_resource_group.rg",
            "svg_id": "edge_45",
            "target": "[root] var.resource_group_location"
        },
        {
            "edge_type": 2,
            "source": "[root] azurerm_resource_group.rg",
            "svg_id": "edge_46",
            "target": "[root] var.resource_group_name"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.bastion_storage_account",
            "svg_id": "edge_47",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.bastion_storage_account",
            "svg_id": "edge_48",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.bastion_storage_account",
            "svg_id": "edge_49",
            "target": "[root] var.storage_account_replication_type"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.bastion_storage_account",
            "svg_id": "edge_50",
            "target": "[root] var.storage_account_tier"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.infra_storage_account",
            "svg_id": "edge_51",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.infra_storage_account",
            "svg_id": "edge_52",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.infra_storage_account",
            "svg_id": "edge_53",
            "target": "[root] var.storage_account_replication_type"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.infra_storage_account",
            "svg_id": "edge_54",
            "target": "[root] var.storage_account_tier"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.master_storage_account",
            "svg_id": "edge_55",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.master_storage_account",
            "svg_id": "edge_56",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.master_storage_account",
            "svg_id": "edge_57",
            "target": "[root] var.storage_account_replication_type"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.master_storage_account",
            "svg_id": "edge_58",
            "target": "[root] var.storage_account_tier"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.nodedata_storage_account",
            "svg_id": "edge_59",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.nodedata_storage_account",
            "svg_id": "edge_60",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.nodedata_storage_account",
            "svg_id": "edge_61",
            "target": "[root] var.storage_account_replication_type"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.nodedata_storage_account",
            "svg_id": "edge_62",
            "target": "[root] var.storage_account_tier"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.nodeos_storage_account",
            "svg_id": "edge_63",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.nodeos_storage_account",
            "svg_id": "edge_64",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.nodeos_storage_account",
            "svg_id": "edge_65",
            "target": "[root] var.storage_account_replication_type"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.nodeos_storage_account",
            "svg_id": "edge_66",
            "target": "[root] var.storage_account_tier"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.persistent_volume_storage_account",
            "svg_id": "edge_67",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.persistent_volume_storage_account",
            "svg_id": "edge_68",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.persistent_volume_storage_account",
            "svg_id": "edge_69",
            "target": "[root] var.storage_account_replication_type"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.persistent_volume_storage_account",
            "svg_id": "edge_70",
            "target": "[root] var.storage_account_tier"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.registry_storage_account",
            "svg_id": "edge_71",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.registry_storage_account",
            "svg_id": "edge_72",
            "target": "[root] var.openshift_cluster_prefix"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.registry_storage_account",
            "svg_id": "edge_73",
            "target": "[root] var.storage_account_replication_type"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_storage_account.registry_storage_account",
            "svg_id": "edge_74",
            "target": "[root] var.storage_account_tier"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_subnet.master_subnet",
            "svg_id": "edge_75",
            "target": "[root] azurerm_virtual_network.vnet"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_subnet.node_subnet",
            "svg_id": "edge_76",
            "target": "[root] azurerm_virtual_network.vnet"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.bastion",
            "svg_id": "edge_77",
            "target": "[root] azurerm_network_interface.bastion_nic"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.bastion",
            "svg_id": "edge_78",
            "target": "[root] azurerm_storage_account.bastion_storage_account"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.bastion",
            "svg_id": "edge_79",
            "target": "[root] var.admin_username"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.bastion",
            "svg_id": "edge_80",
            "target": "[root] var.bastion_vm_size"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.bastion",
            "svg_id": "edge_81",
            "target": "[root] var.openshift_password"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.bastion",
            "svg_id": "edge_82",
            "target": "[root] var.os_image"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.bastion",
            "svg_id": "edge_83",
            "target": "[root] var.os_image_map"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.bastion",
            "svg_id": "edge_84",
            "target": "[root] var.ssh_public_key"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_85",
            "target": "[root] azurerm_availability_set.infra"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_86",
            "target": "[root] azurerm_network_interface.infra_nic"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_87",
            "target": "[root] azurerm_public_ip.bastion_pip"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_88",
            "target": "[root] azurerm_storage_account.infra_storage_account"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_89",
            "target": "[root] var.admin_username"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_90",
            "target": "[root] var.connection_private_ssh_key_path"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_91",
            "target": "[root] var.data_disk_size"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_92",
            "target": "[root] var.infra_vm_size"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_93",
            "target": "[root] var.openshift_password"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_94",
            "target": "[root] var.openshift_script_path"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_95",
            "target": "[root] var.os_image"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_96",
            "target": "[root] var.os_image_map"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.infra",
            "svg_id": "edge_97",
            "target": "[root] var.ssh_public_key"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.master",
            "svg_id": "edge_98",
            "target": "[root] azurerm_availability_set.master"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.master",
            "svg_id": "edge_99",
            "target": "[root] azurerm_network_interface.master_nic"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.master",
            "svg_id": "edge_100",
            "target": "[root] azurerm_storage_account.master_storage_account"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.master",
            "svg_id": "edge_101",
            "target": "[root] azurerm_storage_account.persistent_volume_storage_account"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.master",
            "svg_id": "edge_102",
            "target": "[root] azurerm_storage_account.registry_storage_account"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.master",
            "svg_id": "edge_103",
            "target": "[root] azurerm_virtual_machine.infra"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.master",
            "svg_id": "edge_104",
            "target": "[root] azurerm_virtual_machine.node"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.master",
            "svg_id": "edge_105",
            "target": "[root] var.default_sub_domain_type"
        },
        {
            "edge_type": 2,
            "source": "[root] azurerm_virtual_machine.master",
            "svg_id": "edge_106",
            "target": "[root] var.key_vault_name"
        },
        {
            "edge_type": 2,
            "source": "[root] azurerm_virtual_machine.master",
            "svg_id": "edge_107",
            "target": "[root] var.key_vault_secret"
        },
        {
            "edge_type": 2,
            "source": "[root] azurerm_virtual_machine.master",
            "svg_id": "edge_108",
            "target": "[root] var.master_vm_size"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_109",
            "target": "[root] azurerm_availability_set.node"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_110",
            "target": "[root] azurerm_network_interface.node_nic"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_111",
            "target": "[root] azurerm_public_ip.bastion_pip"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_112",
            "target": "[root] azurerm_storage_account.nodeos_storage_account"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_113",
            "target": "[root] var.admin_username"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_114",
            "target": "[root] var.connection_private_ssh_key_path"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_115",
            "target": "[root] var.data_disk_size"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_116",
            "target": "[root] var.node_vm_size"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_117",
            "target": "[root] var.openshift_password"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_118",
            "target": "[root] var.openshift_script_path"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_119",
            "target": "[root] var.os_image"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_120",
            "target": "[root] var.os_image_map"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_machine.node",
            "svg_id": "edge_121",
            "target": "[root] var.ssh_public_key"
        },
        {
            "edge_type": 1,
            "source": "[root] azurerm_virtual_network.vnet",
            "svg_id": "edge_122",
            "target": "[root] azurerm_resource_group.rg"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_123",
            "target": "[root] azurerm_lb_rule.infra_lb_http"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_124",
            "target": "[root] azurerm_lb_rule.infra_lb_https"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_125",
            "target": "[root] azurerm_lb_rule.master_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_126",
            "target": "[root] azurerm_virtual_machine.bastion"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_127",
            "target": "[root] azurerm_virtual_machine.master"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_128",
            "target": "[root] output.infra_storage_account_name"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_129",
            "target": "[root] output.node_data_storage_account_name"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_130",
            "target": "[root] output.node_os_storage_account_name"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_131",
            "target": "[root] output.openshift_console_url"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_132",
            "target": "[root] output.openshift_infra_load_balancer_fqdn"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_133",
            "target": "[root] output.openshift_master_ssh"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_134",
            "target": "[root] var.api_version"
        },
        {
            "edge_type": 2,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_135",
            "target": "[root] var.api_version_compute"
        },
        {
            "edge_type": 2,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_136",
            "target": "[root] var.default_sub_domain"
        },
        {
            "edge_type": 2,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_137",
            "target": "[root] var.disk_size_gb"
        },
        {
            "edge_type": 2,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_138",
            "target": "[root] var.key_vault_resource_group"
        },
        {
            "edge_type": 1,
            "source": "[root] output.infra_storage_account_name",
            "svg_id": "edge_139",
            "target": "[root] azurerm_storage_account.infra_storage_account"
        },
        {
            "edge_type": 1,
            "source": "[root] output.node_data_storage_account_name",
            "svg_id": "edge_140",
            "target": "[root] azurerm_storage_account.nodedata_storage_account"
        },
        {
            "edge_type": 1,
            "source": "[root] output.node_os_storage_account_name",
            "svg_id": "edge_141",
            "target": "[root] azurerm_storage_account.nodeos_storage_account"
        },
        {
            "edge_type": 1,
            "source": "[root] output.openshift_console_url",
            "svg_id": "edge_142",
            "target": "[root] azurerm_public_ip.openshift_master_pip"
        },
        {
            "edge_type": 1,
            "source": "[root] output.openshift_infra_load_balancer_fqdn",
            "svg_id": "edge_143",
            "target": "[root] azurerm_public_ip.infra_lb_pip"
        },
        {
            "edge_type": 1,
            "source": "[root] output.openshift_master_ssh",
            "svg_id": "edge_144",
            "target": "[root] azurerm_public_ip.openshift_master_pip"
        },
        {
            "edge_type": 1,
            "source": "[root] output.openshift_master_ssh",
            "svg_id": "edge_145",
            "target": "[root] var.admin_username"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.azurerm (close)",
            "svg_id": "edge_146",
            "target": "[root] azurerm_lb_rule.infra_lb_http"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.azurerm (close)",
            "svg_id": "edge_147",
            "target": "[root] azurerm_lb_rule.infra_lb_https"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.azurerm (close)",
            "svg_id": "edge_148",
            "target": "[root] azurerm_lb_rule.master_lb"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.azurerm (close)",
            "svg_id": "edge_149",
            "target": "[root] azurerm_storage_account.nodedata_storage_account"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.azurerm (close)",
            "svg_id": "edge_150",
            "target": "[root] azurerm_virtual_machine.bastion"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.azurerm (close)",
            "svg_id": "edge_151",
            "target": "[root] azurerm_virtual_machine.master"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.azurerm",
            "svg_id": "edge_152",
            "target": "[root] var.aad_client_id"
        },
        {
            "edge_type": 2,
            "source": "[root] provider.azurerm",
            "svg_id": "edge_153",
            "target": "[root] var.aad_client_secret"
        },
        {
            "edge_type": 2,
            "source": "[root] provider.azurerm",
            "svg_id": "edge_154",
            "target": "[root] var.subscription_id"
        },
        {
            "edge_type": 2,
            "source": "[root] provider.azurerm",
            "svg_id": "edge_155",
            "target": "[root] var.tenant_id"
        },
        {
            "edge_type": 1,
            "source": "[root] provisioner.file (close)",
            "svg_id": "edge_156",
            "target": "[root] azurerm_virtual_machine.master"
        },
        {
            "edge_type": 1,
            "source": "[root] provisioner.remote-exec (close)",
            "svg_id": "edge_157",
            "target": "[root] azurerm_virtual_machine.master"
        },
        {
            "edge_type": 1,
            "source": "[root] root",
            "svg_id": "edge_158",
            "target": "[root] meta.count-boundary (count boundary fixup)"
        },
        {
            "edge_type": 1,
            "source": "[root] root",
            "svg_id": "edge_159",
            "target": "[root] provider.azurerm (close)"
        },
        {
            "edge_type": 1,
            "source": "[root] root",
            "svg_id": "edge_160",
            "target": "[root] provisioner.file (close)"
        },
        {
            "edge_type": 1,
            "source": "[root] root",
            "svg_id": "edge_161",
            "target": "[root] provisioner.remote-exec (close)"
        },
        {
            "edge_type": 2,
            "source": "[root] var.resource_group_location",
            "svg_id": "edge_162",
            "target": "[root] var.resource_group_name"
        },
        {
            "edge_type": 3,
            "source": "[root] var.resource_group_location",
            "svg_id": "edge_163",
            "target": "[root] var.resource_group_name"
        },
        {
            "edge_type": 2,
            "source": "[root] var.default_sub_domain_type",
            "svg_id": "edge_164",
            "target": "[root] var.key_vault_name"
        },
        {
            "edge_type": 2,
            "source": "[root] var.key_vault_name",
            "svg_id": "edge_165",
            "target": "[root] var.key_vault_secret"
        },
        {
            "edge_type": 2,
            "source": "[root] var.key_vault_secret",
            "svg_id": "edge_166",
            "target": "[root] var.master_vm_size"
        },
        {
            "edge_type": 2,
            "source": "[root] var.default_sub_domain_type",
            "svg_id": "edge_167",
            "target": "[root] var.key_vault_name"
        },
        {
            "edge_type": 2,
            "source": "[root] var.key_vault_name",
            "svg_id": "edge_168",
            "target": "[root] var.key_vault_secret"
        },
        {
            "edge_type": 2,
            "source": "[root] var.key_vault_secret",
            "svg_id": "edge_169",
            "target": "[root] var.master_vm_size"
        },
        {
            "edge_type": 2,
            "source": "[root] var.default_sub_domain_type",
            "svg_id": "edge_170",
            "target": "[root] var.key_vault_name"
        },
        {
            "edge_type": 2,
            "source": "[root] var.key_vault_name",
            "svg_id": "edge_171",
            "target": "[root] var.key_vault_secret"
        },
        {
            "edge_type": 2,
            "source": "[root] var.key_vault_secret",
            "svg_id": "edge_172",
            "target": "[root] var.master_vm_size"
        },
        {
            "edge_type": 3,
            "source": "[root] var.default_sub_domain_type",
            "svg_id": "edge_173",
            "target": "[root] var.key_vault_name"
        },
        {
            "edge_type": 3,
            "source": "[root] var.key_vault_name",
            "svg_id": "edge_174",
            "target": "[root] var.key_vault_secret"
        },
        {
            "edge_type": 3,
            "source": "[root] var.key_vault_secret",
            "svg_id": "edge_175",
            "target": "[root] var.master_vm_size"
        },
        {
            "edge_type": 2,
            "source": "[root] var.api_version",
            "svg_id": "edge_176",
            "target": "[root] var.api_version_compute"
        },
        {
            "edge_type": 2,
            "source": "[root] var.api_version_compute",
            "svg_id": "edge_177",
            "target": "[root] var.default_sub_domain"
        },
        {
            "edge_type": 2,
            "source": "[root] var.default_sub_domain",
            "svg_id": "edge_178",
            "target": "[root] var.disk_size_gb"
        },
        {
            "edge_type": 2,
            "source": "[root] var.disk_size_gb",
            "svg_id": "edge_179",
            "target": "[root] var.key_vault_resource_group"
        },
        {
            "edge_type": 2,
            "source": "[root] var.api_version",
            "svg_id": "edge_180",
            "target": "[root] var.api_version_compute"
        },
        {
            "edge_type": 2,
            "source": "[root] var.api_version_compute",
            "svg_id": "edge_181",
            "target": "[root] var.default_sub_domain"
        },
        {
            "edge_type": 2,
            "source": "[root] var.default_sub_domain",
            "svg_id": "edge_182",
            "target": "[root] var.disk_size_gb"
        },
        {
            "edge_type": 2,
            "source": "[root] var.disk_size_gb",
            "svg_id": "edge_183",
            "target": "[root] var.key_vault_resource_group"
        },
        {
            "edge_type": 2,
            "source": "[root] var.api_version",
            "svg_id": "edge_184",
            "target": "[root] var.api_version_compute"
        },
        {
            "edge_type": 2,
            "source": "[root] var.api_version_compute",
            "svg_id": "edge_185",
            "target": "[root] var.default_sub_domain"
        },
        {
            "edge_type": 2,
            "source": "[root] var.default_sub_domain",
            "svg_id": "edge_186",
            "target": "[root] var.disk_size_gb"
        },
        {
            "edge_type": 2,
            "source": "[root] var.disk_size_gb",
            "svg_id": "edge_187",
            "target": "[root] var.key_vault_resource_group"
        },
        {
            "edge_type": 2,
            "source": "[root] var.api_version",
            "svg_id": "edge_188",
            "target": "[root] var.api_version_compute"
        },
        {
            "edge_type": 2,
            "source": "[root] var.api_version_compute",
            "svg_id": "edge_189",
            "target": "[root] var.default_sub_domain"
        },
        {
            "edge_type": 2,
            "source": "[root] var.default_sub_domain",
            "svg_id": "edge_190",
            "target": "[root] var.disk_size_gb"
        },
        {
            "edge_type": 2,
            "source": "[root] var.disk_size_gb",
            "svg_id": "edge_191",
            "target": "[root] var.key_vault_resource_group"
        },
        {
            "edge_type": 3,
            "source": "[root] var.api_version",
            "svg_id": "edge_192",
            "target": "[root] var.api_version_compute"
        },
        {
            "edge_type": 3,
            "source": "[root] var.api_version_compute",
            "svg_id": "edge_193",
            "target": "[root] var.default_sub_domain"
        },
        {
            "edge_type": 3,
            "source": "[root] var.default_sub_domain",
            "svg_id": "edge_194",
            "target": "[root] var.disk_size_gb"
        },
        {
            "edge_type": 3,
            "source": "[root] var.disk_size_gb",
            "svg_id": "edge_195",
            "target": "[root] var.key_vault_resource_group"
        },
        {
            "edge_type": 2,
            "source": "[root] var.aad_client_id",
            "svg_id": "edge_196",
            "target": "[root] var.aad_client_secret"
        },
        {
            "edge_type": 2,
            "source": "[root] var.aad_client_secret",
            "svg_id": "edge_197",
            "target": "[root] var.subscription_id"
        },
        {
            "edge_type": 2,
            "source": "[root] var.subscription_id",
            "svg_id": "edge_198",
            "target": "[root] var.tenant_id"
        },
        {
            "edge_type": 2,
            "source": "[root] var.aad_client_id",
            "svg_id": "edge_199",
            "target": "[root] var.aad_client_secret"
        },
        {
            "edge_type": 2,
            "source": "[root] var.aad_client_secret",
            "svg_id": "edge_200",
            "target": "[root] var.subscription_id"
        },
        {
            "edge_type": 2,
            "source": "[root] var.subscription_id",
            "svg_id": "edge_201",
            "target": "[root] var.tenant_id"
        },
        {
            "edge_type": 2,
            "source": "[root] var.aad_client_id",
            "svg_id": "edge_202",
            "target": "[root] var.aad_client_secret"
        },
        {
            "edge_type": 2,
            "source": "[root] var.aad_client_secret",
            "svg_id": "edge_203",
            "target": "[root] var.subscription_id"
        },
        {
            "edge_type": 2,
            "source": "[root] var.subscription_id",
            "svg_id": "edge_204",
            "target": "[root] var.tenant_id"
        },
        {
            "edge_type": 3,
            "source": "[root] var.aad_client_id",
            "svg_id": "edge_205",
            "target": "[root] var.aad_client_secret"
        },
        {
            "edge_type": 3,
            "source": "[root] var.aad_client_secret",
            "svg_id": "edge_206",
            "target": "[root] var.subscription_id"
        },
        {
            "edge_type": 3,
            "source": "[root] var.subscription_id",
            "svg_id": "edge_207",
            "target": "[root] var.tenant_id"
        }
    ],
    "nodes": [
        {
            "cluster": "root",
            "definition": {
                "location": "${azurerm_resource_group.rg.location}",
                "name": "infraavailabilityset",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_availability_set.infra",
            "resource_name": "infra",
            "simple_name": "azurerm_availability_set.infra",
            "svg_id": "node_0",
            "type": "azurerm_availability_set"
        },
        {
            "cluster": "root",
            "definition": {
                "location": "${azurerm_resource_group.rg.location}",
                "name": "masteravailabilityset",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_availability_set.master",
            "resource_name": "master",
            "simple_name": "azurerm_availability_set.master",
            "svg_id": "node_1",
            "type": "azurerm_availability_set"
        },
        {
            "cluster": "root",
            "definition": {
                "location": "${azurerm_resource_group.rg.location}",
                "name": "nodeavailabilityset",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_availability_set.node",
            "resource_name": "node",
            "simple_name": "azurerm_availability_set.node",
            "svg_id": "node_2",
            "type": "azurerm_availability_set"
        },
        {
            "cluster": "root",
            "definition": {
                "depends_on": [
                    "azurerm_public_ip.infra_lb_pip"
                ],
                "frontend_ip_configuration": {
                    "name": "LoadBalancerFrontEnd",
                    "public_ip_address_id": "${azurerm_public_ip.infra_lb_pip.id}"
                },
                "location": "${azurerm_resource_group.rg.location}",
                "name": "infraloadbalancer",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_lb.infra_lb",
            "resource_name": "infra_lb",
            "simple_name": "azurerm_lb.infra_lb",
            "svg_id": "node_3",
            "type": "azurerm_lb"
        },
        {
            "cluster": "root",
            "definition": {
                "depends_on": [
                    "azurerm_public_ip.openshift_master_pip"
                ],
                "frontend_ip_configuration": {
                    "name": "LoadBalancerFrontEnd",
                    "public_ip_address_id": "${azurerm_public_ip.openshift_master_pip.id}"
                },
                "location": "${azurerm_resource_group.rg.location}",
                "name": "masterloadbalancer",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_lb.master_lb",
            "resource_name": "master_lb",
            "simple_name": "azurerm_lb.master_lb",
            "svg_id": "node_4",
            "type": "azurerm_lb"
        },
        {
            "cluster": "root",
            "definition": {
                "depends_on": [
                    "azurerm_lb.infra_lb"
                ],
                "loadbalancer_id": "${azurerm_lb.infra_lb.id}",
                "name": "loadBalancerBackEnd",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_lb_backend_address_pool.infra_lb",
            "resource_name": "infra_lb",
            "simple_name": "azurerm_lb_backend_address_pool.infra_lb",
            "svg_id": "node_5",
            "type": "azurerm_lb_backend_address_pool"
        },
        {
            "cluster": "root",
            "definition": {
                "depends_on": [
                    "azurerm_lb.master_lb"
                ],
                "loadbalancer_id": "${azurerm_lb.master_lb.id}",
                "name": "loadBalancerBackEnd",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_lb_backend_address_pool.master_lb",
            "resource_name": "master_lb",
            "simple_name": "azurerm_lb_backend_address_pool.master_lb",
            "svg_id": "node_6",
            "type": "azurerm_lb_backend_address_pool"
        },
        {
            "cluster": "root",
            "definition": {
                "backend_port": 22,
                "count": "${var.master_instance_count}",
                "depends_on": [
                    "azurerm_lb.master_lb"
                ],
                "frontend_ip_configuration_name": "LoadBalancerFrontEnd",
                "frontend_port": "${count.index + 2200}",
                "loadbalancer_id": "${azurerm_lb.master_lb.id}",
                "name": "${azurerm_lb.master_lb.name}-SSH-${count.index}",
                "protocol": "Tcp",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_lb_nat_rule.master_lb",
            "resource_name": "master_lb",
            "simple_name": "azurerm_lb_nat_rule.master_lb",
            "svg_id": "node_7",
            "type": "azurerm_lb_nat_rule"
        },
        {
            "cluster": "root",
            "definition": {
                "depends_on": [
                    "azurerm_lb.infra_lb"
                ],
                "interval_in_seconds": 5,
                "loadbalancer_id": "${azurerm_lb.infra_lb.id}",
                "name": "httpProbe",
                "number_of_probes": 2,
                "port": 80,
                "protocol": "Tcp",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_lb_probe.infra_lb_http_probe",
            "resource_name": "infra_lb_http_probe",
            "simple_name": "azurerm_lb_probe.infra_lb_http_probe",
            "svg_id": "node_8",
            "type": "azurerm_lb_probe"
        },
        {
            "cluster": "root",
            "definition": {
                "interval_in_seconds": 5,
                "loadbalancer_id": "${azurerm_lb.infra_lb.id}",
                "name": "httpsProbe",
                "number_of_probes": 2,
                "port": 443,
                "protocol": "Tcp",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_lb_probe.infra_lb_https_probe",
            "resource_name": "infra_lb_https_probe",
            "simple_name": "azurerm_lb_probe.infra_lb_https_probe",
            "svg_id": "node_9",
            "type": "azurerm_lb_probe"
        },
        {
            "cluster": "root",
            "definition": {
                "depends_on": [
                    "azurerm_lb.master_lb"
                ],
                "interval_in_seconds": 5,
                "loadbalancer_id": "${azurerm_lb.master_lb.id}",
                "name": "8443Probe",
                "number_of_probes": 2,
                "port": 8443,
                "protocol": "Tcp",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_lb_probe.master_lb",
            "resource_name": "master_lb",
            "simple_name": "azurerm_lb_probe.master_lb",
            "svg_id": "node_10",
            "type": "azurerm_lb_probe"
        },
        {
            "cluster": "root",
            "definition": {
                "backend_address_pool_id": "${azurerm_lb_backend_address_pool.infra_lb.id}",
                "backend_port": 80,
                "depends_on": [
                    "azurerm_lb_probe.infra_lb_http_probe",
                    "azurerm_lb.infra_lb",
                    "azurerm_lb_backend_address_pool.infra_lb"
                ],
                "frontend_ip_configuration_name": "LoadBalancerFrontEnd",
                "frontend_port": 80,
                "loadbalancer_id": "${azurerm_lb.infra_lb.id}",
                "name": "OpenShiftRouterHTTP",
                "probe_id": "${azurerm_lb_probe.infra_lb_http_probe.id}",
                "protocol": "Tcp",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_lb_rule.infra_lb_http",
            "resource_name": "infra_lb_http",
            "simple_name": "azurerm_lb_rule.infra_lb_http",
            "svg_id": "node_11",
            "type": "azurerm_lb_rule"
        },
        {
            "cluster": "root",
            "definition": {
                "backend_address_pool_id": "${azurerm_lb_backend_address_pool.infra_lb.id}",
                "backend_port": 443,
                "depends_on": [
                    "azurerm_lb_probe.infra_lb_https_probe",
                    "azurerm_lb_backend_address_pool.infra_lb"
                ],
                "frontend_ip_configuration_name": "LoadBalancerFrontEnd",
                "frontend_port": 443,
                "loadbalancer_id": "${azurerm_lb.infra_lb.id}",
                "name": "OpenShiftRouterHTTPS",
                "probe_id": "${azurerm_lb_probe.infra_lb_https_probe.id}",
                "protocol": "Tcp",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_lb_rule.infra_lb_https",
            "resource_name": "infra_lb_https",
            "simple_name": "azurerm_lb_rule.infra_lb_https",
            "svg_id": "node_12",
            "type": "azurerm_lb_rule"
        },
        {
            "cluster": "root",
            "definition": {
                "backend_address_pool_id": "${azurerm_lb_backend_address_pool.master_lb.id}",
                "backend_port": 8443,
                "depends_on": [
                    "azurerm_lb_probe.master_lb",
                    "azurerm_lb.master_lb",
                    "azurerm_lb_backend_address_pool.master_lb"
                ],
                "enable_floating_ip": false,
                "frontend_ip_configuration_name": "LoadBalancerFrontEnd",
                "frontend_port": 8443,
                "idle_timeout_in_minutes": 30,
                "load_distribution": "SourceIP",
                "loadbalancer_id": "${azurerm_lb.master_lb.id}",
                "name": "OpenShiftAdminConsole",
                "probe_id": "${azurerm_lb_probe.master_lb.id}",
                "protocol": "Tcp",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_lb_rule.master_lb",
            "resource_name": "master_lb",
            "simple_name": "azurerm_lb_rule.master_lb",
            "svg_id": "node_13",
            "type": "azurerm_lb_rule"
        },
        {
            "cluster": "root",
            "definition": {
                "ip_configuration": {
                    "name": "bastionip${count.index}",
                    "private_ip_address_allocation": "Dynamic",
                    "public_ip_address_id": "${azurerm_public_ip.bastion_pip.id}",
                    "subnet_id": "${azurerm_subnet.master_subnet.id}"
                },
                "location": "${azurerm_resource_group.rg.location}",
                "name": "bastionnic${count.index}",
                "network_security_group_id": "${azurerm_network_security_group.master_nsg.id}",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_network_interface.bastion_nic",
            "resource_name": "bastion_nic",
            "simple_name": "azurerm_network_interface.bastion_nic",
            "svg_id": "node_14",
            "type": "azurerm_network_interface"
        },
        {
            "cluster": "root",
            "definition": {
                "count": "${var.infra_instance_count}",
                "ip_configuration": {
                    "load_balancer_backend_address_pools_ids": [
                        "${azurerm_lb_backend_address_pool.infra_lb.id}"
                    ],
                    "name": "infraip${count.index}",
                    "private_ip_address_allocation": "Dynamic",
                    "subnet_id": "${azurerm_subnet.master_subnet.id}"
                },
                "location": "${azurerm_resource_group.rg.location}",
                "name": "infra_nic${count.index}",
                "network_security_group_id": "${azurerm_network_security_group.infra_nsg.id}",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_network_interface.infra_nic",
            "resource_name": "infra_nic",
            "simple_name": "azurerm_network_interface.infra_nic",
            "svg_id": "node_15",
            "type": "azurerm_network_interface"
        },
        {
            "cluster": "root",
            "definition": {
                "count": "${var.master_instance_count}",
                "ip_configuration": {
                    "load_balancer_backend_address_pools_ids": [
                        "${azurerm_lb_backend_address_pool.master_lb.id}"
                    ],
                    "load_balancer_inbound_nat_rules_ids": [
                        "${element(azurerm_lb_nat_rule.master_lb.*.id, count.index)}"
                    ],
                    "name": "masterip${count.index}",
                    "private_ip_address_allocation": "Dynamic",
                    "subnet_id": "${azurerm_subnet.master_subnet.id}"
                },
                "location": "${azurerm_resource_group.rg.location}",
                "name": "masternic${count.index}",
                "network_security_group_id": "${azurerm_network_security_group.master_nsg.id}",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_network_interface.master_nic",
            "resource_name": "master_nic",
            "simple_name": "azurerm_network_interface.master_nic",
            "svg_id": "node_16",
            "type": "azurerm_network_interface"
        },
        {
            "cluster": "root",
            "definition": {
                "count": "${var.node_instance_count}",
                "ip_configuration": {
                    "name": "nodeip${count.index}",
                    "private_ip_address_allocation": "Dynamic",
                    "subnet_id": "${azurerm_subnet.node_subnet.id}"
                },
                "location": "${azurerm_resource_group.rg.location}",
                "name": "node_nic${count.index}",
                "network_security_group_id": "${azurerm_network_security_group.node_nsg.id}",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_network_interface.node_nic",
            "resource_name": "node_nic",
            "simple_name": "azurerm_network_interface.node_nic",
            "svg_id": "node_17",
            "type": "azurerm_network_interface"
        },
        {
            "cluster": "root",
            "definition": {
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}-infra-nsg",
                "resource_group_name": "${azurerm_resource_group.rg.name}",
                "security_rule": [
                    {
                        "access": "Allow",
                        "description": "Allow SSH in from all locations",
                        "destination_address_prefix": "*",
                        "destination_port_range": "22",
                        "direction": "Inbound",
                        "name": "allow_SSH_in_all",
                        "priority": 100,
                        "protocol": "Tcp",
                        "source_address_prefix": "*",
                        "source_port_range": "*"
                    },
                    {
                        "access": "Allow",
                        "description": "Allow HTTPS connections from all locations",
                        "destination_address_prefix": "*",
                        "destination_port_range": "443",
                        "direction": "Inbound",
                        "name": "allow_HTTPS_all",
                        "priority": 200,
                        "protocol": "Tcp",
                        "source_address_prefix": "*",
                        "source_port_range": "*"
                    },
                    {
                        "access": "Allow",
                        "description": "Allow HTTP connections from all locations",
                        "destination_address_prefix": "*",
                        "destination_port_range": "80",
                        "direction": "Inbound",
                        "name": "allow_HTTP_in_all",
                        "priority": 300,
                        "protocol": "Tcp",
                        "source_address_prefix": "*",
                        "source_port_range": "*"
                    }
                ]
            },
            "group": 20000,
            "label": "[root] azurerm_network_security_group.infra_nsg",
            "resource_name": "infra_nsg",
            "simple_name": "azurerm_network_security_group.infra_nsg",
            "svg_id": "node_18",
            "type": "azurerm_network_security_group"
        },
        {
            "cluster": "root",
            "definition": {
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}-master-nsg",
                "resource_group_name": "${azurerm_resource_group.rg.name}",
                "security_rule": [
                    {
                        "access": "Allow",
                        "description": "Allow SSH in from all locations",
                        "destination_address_prefix": "*",
                        "destination_port_range": "22",
                        "direction": "Inbound",
                        "name": "allow_SSH_in_all",
                        "priority": 100,
                        "protocol": "Tcp",
                        "source_address_prefix": "*",
                        "source_port_range": "*"
                    },
                    {
                        "access": "Allow",
                        "description": "Allow HTTPS connections from all locations",
                        "destination_address_prefix": "*",
                        "destination_port_range": "443",
                        "direction": "Inbound",
                        "name": "allow_HTTPS_all",
                        "priority": 200,
                        "protocol": "Tcp",
                        "source_address_prefix": "*",
                        "source_port_range": "*"
                    },
                    {
                        "access": "Allow",
                        "description": "Allow OpenShift Console connections from all locations",
                        "destination_address_prefix": "*",
                        "destination_port_range": "8443",
                        "direction": "Inbound",
                        "name": "allow_OpenShift_console_in_all",
                        "priority": 300,
                        "protocol": "Tcp",
                        "source_address_prefix": "*",
                        "source_port_range": "*"
                    }
                ]
            },
            "group": 20000,
            "label": "[root] azurerm_network_security_group.master_nsg",
            "resource_name": "master_nsg",
            "simple_name": "azurerm_network_security_group.master_nsg",
            "svg_id": "node_19",
            "type": "azurerm_network_security_group"
        },
        {
            "cluster": "root",
            "definition": {
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}-node-nsg",
                "resource_group_name": "${azurerm_resource_group.rg.name}",
                "security_rule": [
                    {
                        "access": "Allow",
                        "description": "Allow SSH in from all locations",
                        "destination_address_prefix": "*",
                        "destination_port_range": "22",
                        "direction": "Inbound",
                        "name": "allow_SSH_in_all",
                        "priority": 100,
                        "protocol": "Tcp",
                        "source_address_prefix": "*",
                        "source_port_range": "*"
                    },
                    {
                        "access": "Allow",
                        "description": "Allow HTTPS connections from all locations",
                        "destination_address_prefix": "*",
                        "destination_port_range": "443",
                        "direction": "Inbound",
                        "name": "allow_HTTPS_all",
                        "priority": 200,
                        "protocol": "Tcp",
                        "source_address_prefix": "*",
                        "source_port_range": "*"
                    },
                    {
                        "access": "Allow",
                        "description": "Allow HTTP connections from all locations",
                        "destination_address_prefix": "*",
                        "destination_port_range": "80",
                        "direction": "Inbound",
                        "name": "allow_HTTP_in_all",
                        "priority": 300,
                        "protocol": "Tcp",
                        "source_address_prefix": "*",
                        "source_port_range": "*"
                    }
                ]
            },
            "group": 20000,
            "label": "[root] azurerm_network_security_group.node_nsg",
            "resource_name": "node_nsg",
            "simple_name": "azurerm_network_security_group.node_nsg",
            "svg_id": "node_20",
            "type": "azurerm_network_security_group"
        },
        {
            "cluster": "root",
            "definition": {
                "domain_name_label": "${var.openshift_cluster_prefix}-bastion",
                "location": "${azurerm_resource_group.rg.location}",
                "name": "bastionpip",
                "public_ip_address_allocation": "Static",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_public_ip.bastion_pip",
            "resource_name": "bastion_pip",
            "simple_name": "azurerm_public_ip.bastion_pip",
            "svg_id": "node_21",
            "type": "azurerm_public_ip"
        },
        {
            "cluster": "root",
            "definition": {
                "domain_name_label": "${var.openshift_cluster_prefix}infrapip",
                "location": "${azurerm_resource_group.rg.location}",
                "name": "infraip",
                "public_ip_address_allocation": "Static",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_public_ip.infra_lb_pip",
            "resource_name": "infra_lb_pip",
            "simple_name": "azurerm_public_ip.infra_lb_pip",
            "svg_id": "node_22",
            "type": "azurerm_public_ip"
        },
        {
            "cluster": "root",
            "definition": {
                "domain_name_label": "${var.openshift_cluster_prefix}",
                "location": "${azurerm_resource_group.rg.location}",
                "name": "masterpip",
                "public_ip_address_allocation": "Static",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_public_ip.openshift_master_pip",
            "resource_name": "openshift_master_pip",
            "simple_name": "azurerm_public_ip.openshift_master_pip",
            "svg_id": "node_23",
            "type": "azurerm_public_ip"
        },
        {
            "cluster": "root",
            "definition": {
                "location": "${var.resource_group_location}",
                "name": "${var.resource_group_name}"
            },
            "group": 20000,
            "label": "[root] azurerm_resource_group.rg",
            "resource_name": "rg",
            "simple_name": "azurerm_resource_group.rg",
            "svg_id": "node_24",
            "type": "azurerm_resource_group"
        },
        {
            "cluster": "root",
            "definition": {
                "account_replication_type": "${var.storage_account_replication_type}",
                "account_tier": "${var.storage_account_tier}",
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}bsa",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_storage_account.bastion_storage_account",
            "resource_name": "bastion_storage_account",
            "simple_name": "azurerm_storage_account.bastion_storage_account",
            "svg_id": "node_25",
            "type": "azurerm_storage_account"
        },
        {
            "cluster": "root",
            "definition": {
                "account_replication_type": "${var.storage_account_replication_type}",
                "account_tier": "${var.storage_account_tier}",
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}infrasa",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_storage_account.infra_storage_account",
            "resource_name": "infra_storage_account",
            "simple_name": "azurerm_storage_account.infra_storage_account",
            "svg_id": "node_26",
            "type": "azurerm_storage_account"
        },
        {
            "cluster": "root",
            "definition": {
                "account_replication_type": "${var.storage_account_replication_type}",
                "account_tier": "${var.storage_account_tier}",
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}msa",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_storage_account.master_storage_account",
            "resource_name": "master_storage_account",
            "simple_name": "azurerm_storage_account.master_storage_account",
            "svg_id": "node_27",
            "type": "azurerm_storage_account"
        },
        {
            "cluster": "root",
            "definition": {
                "account_replication_type": "${var.storage_account_replication_type}",
                "account_tier": "${var.storage_account_tier}",
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}nodedatasa",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_storage_account.nodedata_storage_account",
            "resource_name": "nodedata_storage_account",
            "simple_name": "azurerm_storage_account.nodedata_storage_account",
            "svg_id": "node_28",
            "type": "azurerm_storage_account"
        },
        {
            "cluster": "root",
            "definition": {
                "account_replication_type": "${var.storage_account_replication_type}",
                "account_tier": "${var.storage_account_tier}",
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}nodeossa",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_storage_account.nodeos_storage_account",
            "resource_name": "nodeos_storage_account",
            "simple_name": "azurerm_storage_account.nodeos_storage_account",
            "svg_id": "node_29",
            "type": "azurerm_storage_account"
        },
        {
            "cluster": "root",
            "definition": {
                "account_replication_type": "${var.storage_account_replication_type}",
                "account_tier": "${var.storage_account_tier}",
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}pvsa",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_storage_account.persistent_volume_storage_account",
            "resource_name": "persistent_volume_storage_account",
            "simple_name": "azurerm_storage_account.persistent_volume_storage_account",
            "svg_id": "node_30",
            "type": "azurerm_storage_account"
        },
        {
            "cluster": "root",
            "definition": {
                "account_replication_type": "${var.storage_account_replication_type}",
                "account_tier": "${var.storage_account_tier}",
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}regsa",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_storage_account.registry_storage_account",
            "resource_name": "registry_storage_account",
            "simple_name": "azurerm_storage_account.registry_storage_account",
            "svg_id": "node_31",
            "type": "azurerm_storage_account"
        },
        {
            "cluster": "root",
            "definition": {
                "address_prefix": "10.1.0.0/16",
                "depends_on": [
                    "azurerm_virtual_network.vnet"
                ],
                "name": "mastersubnet",
                "resource_group_name": "${azurerm_resource_group.rg.name}",
                "virtual_network_name": "${azurerm_virtual_network.vnet.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_subnet.master_subnet",
            "resource_name": "master_subnet",
            "simple_name": "azurerm_subnet.master_subnet",
            "svg_id": "node_32",
            "type": "azurerm_subnet"
        },
        {
            "cluster": "root",
            "definition": {
                "address_prefix": "10.2.0.0/16",
                "name": "nodesubnet",
                "resource_group_name": "${azurerm_resource_group.rg.name}",
                "virtual_network_name": "${azurerm_virtual_network.vnet.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_subnet.node_subnet",
            "resource_name": "node_subnet",
            "simple_name": "azurerm_subnet.node_subnet",
            "svg_id": "node_33",
            "type": "azurerm_subnet"
        },
        {
            "cluster": "root",
            "definition": {
                "delete_data_disks_on_termination": true,
                "delete_os_disk_on_termination": true,
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}-bastion-1",
                "network_interface_ids": [
                    "${azurerm_network_interface.bastion_nic.id}"
                ],
                "os_profile": {
                    "admin_password": "${var.openshift_password}",
                    "admin_username": "${var.admin_username}",
                    "computer_name": "${var.openshift_cluster_prefix}-bastion-${count.index}"
                },
                "os_profile_linux_config": {
                    "disable_password_authentication": true,
                    "ssh_keys": {
                        "key_data": "${var.ssh_public_key}",
                        "path": "/home/${var.admin_username}/.ssh/authorized_keys"
                    }
                },
                "resource_group_name": "${azurerm_resource_group.rg.name}",
                "storage_image_reference": {
                    "offer": "${lookup(var.os_image_map, join(\"_offer\", list(var.os_image, \"\")))}",
                    "publisher": "${lookup(var.os_image_map, join(\"_publisher\", list(var.os_image, \"\")))}",
                    "sku": "${lookup(var.os_image_map, join(\"_sku\", list(var.os_image, \"\")))}",
                    "version": "${lookup(var.os_image_map, join(\"_version\", list(var.os_image, \"\")))}"
                },
                "storage_os_disk": {
                    "caching": "ReadWrite",
                    "create_option": "FromImage",
                    "disk_size_gb": 60,
                    "name": "${var.openshift_cluster_prefix}-master-osdisk${count.index}",
                    "vhd_uri": "${azurerm_storage_account.bastion_storage_account.primary_blob_endpoint}vhds/${var.openshift_cluster_prefix}-bastion-osdisk.vhd"
                },
                "tags": {
                    "displayName": "${var.openshift_cluster_prefix}-bastion VM Creation"
                },
                "vm_size": "${var.bastion_vm_size}"
            },
            "group": 20000,
            "label": "[root] azurerm_virtual_machine.bastion",
            "resource_name": "bastion",
            "simple_name": "azurerm_virtual_machine.bastion",
            "svg_id": "node_34",
            "type": "azurerm_virtual_machine"
        },
        {
            "cluster": "root",
            "definition": {
                "availability_set_id": "${azurerm_availability_set.infra.id}",
                "connection": {
                    "bastion_host": "${azurerm_public_ip.bastion_pip.fqdn}",
                    "bastion_private_key": "${file(var.connection_private_ssh_key_path)}",
                    "bastion_user": "${var.admin_username}",
                    "host": "${element(azurerm_network_interface.infra_nic.*.private_ip_address, count.index)}",
                    "private_key": "${file(var.connection_private_ssh_key_path)}",
                    "type": "ssh",
                    "user": "${var.admin_username}"
                },
                "count": "${var.infra_instance_count}",
                "delete_data_disks_on_termination": true,
                "delete_os_disk_on_termination": true,
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}-infra-${count.index}",
                "network_interface_ids": [
                    "${element(azurerm_network_interface.infra_nic.*.id, count.index)}"
                ],
                "os_profile": {
                    "admin_password": "${var.openshift_password}",
                    "admin_username": "${var.admin_username}",
                    "computer_name": "${var.openshift_cluster_prefix}-infra-${count.index}"
                },
                "os_profile_linux_config": {
                    "disable_password_authentication": true,
                    "ssh_keys": {
                        "key_data": "${var.ssh_public_key}",
                        "path": "/home/${var.admin_username}/.ssh/authorized_keys"
                    }
                },
                "provisioner": [
                    {
                        "file": {
                            "destination": "nodePrep.sh",
                            "source": "${var.openshift_script_path}/nodePrep.sh"
                        }
                    },
                    {
                        "remote-exec": {
                            "inline": [
                                "chmod +x nodePrep.sh",
                                "sudo bash nodePrep.sh"
                            ]
                        }
                    }
                ],
                "resource_group_name": "${azurerm_resource_group.rg.name}",
                "storage_data_disk": {
                    "create_option": "Empty",
                    "disk_size_gb": "${var.data_disk_size}",
                    "lun": 0,
                    "name": "${var.openshift_cluster_prefix}-infra-docker-pool",
                    "vhd_uri": "${azurerm_storage_account.infra_storage_account.primary_blob_endpoint}vhds/${var.openshift_cluster_prefix}-infra-docker-pool${count.index}.vhd"
                },
                "storage_image_reference": {
                    "offer": "${lookup(var.os_image_map, join(\"_offer\", list(var.os_image, \"\")))}",
                    "publisher": "${lookup(var.os_image_map, join(\"_publisher\", list(var.os_image, \"\")))}",
                    "sku": "${lookup(var.os_image_map, join(\"_sku\", list(var.os_image, \"\")))}",
                    "version": "${lookup(var.os_image_map, join(\"_version\", list(var.os_image, \"\")))}"
                },
                "storage_os_disk": {
                    "caching": "ReadWrite",
                    "create_option": "FromImage",
                    "name": "${var.openshift_cluster_prefix}-infra-osdisk${count.index}",
                    "vhd_uri": "${azurerm_storage_account.infra_storage_account.primary_blob_endpoint}vhds/${var.openshift_cluster_prefix}-infra-osdisk${count.index}.vhd"
                },
                "tags": {
                    "displayName": "${var.openshift_cluster_prefix}-infra VM Creation"
                },
                "vm_size": "${var.infra_vm_size}"
            },
            "group": 20000,
            "label": "[root] azurerm_virtual_machine.infra",
            "resource_name": "infra",
            "simple_name": "azurerm_virtual_machine.infra",
            "svg_id": "node_35",
            "type": "azurerm_virtual_machine"
        },
        {
            "cluster": "root",
            "definition": {
                "availability_set_id": "${azurerm_availability_set.master.id}",
                "connection": {
                    "host": "${azurerm_public_ip.openshift_master_pip.fqdn}",
                    "port": 2200,
                    "private_key": "${file(var.connection_private_ssh_key_path)}",
                    "user": "${var.admin_username}"
                },
                "count": "${var.master_instance_count}",
                "delete_data_disks_on_termination": true,
                "delete_os_disk_on_termination": true,
                "depends_on": [
                    "azurerm_virtual_machine.infra",
                    "azurerm_virtual_machine.node"
                ],
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}-master-${count.index}",
                "network_interface_ids": [
                    "${element(azurerm_network_interface.master_nic.*.id, count.index)}"
                ],
                "os_profile": {
                    "admin_password": "${var.openshift_password}",
                    "admin_username": "${var.admin_username}",
                    "computer_name": "${var.openshift_cluster_prefix}-master-${count.index}"
                },
                "os_profile_linux_config": {
                    "disable_password_authentication": true,
                    "ssh_keys": {
                        "key_data": "${var.ssh_public_key}",
                        "path": "/home/${var.admin_username}/.ssh/authorized_keys"
                    }
                },
                "provisioner": [
                    {
                        "file": {
                            "destination": "masterPrep.sh",
                            "source": "${var.openshift_script_path}/masterPrep.sh"
                        }
                    },
                    {
                        "file": {
                            "destination": "deployOpenShift.sh",
                            "source": "${var.openshift_script_path}/deployOpenShift.sh"
                        }
                    },
                    {
                        "remote-exec": {
                            "inline": [
                                "chmod +x masterPrep.sh",
                                "chmod +x deployOpenShift.sh",
                                "sudo bash masterPrep.sh \"${azurerm_storage_account.persistent_volume_storage_account.name}\" \"${var.admin_username}\" && sudo bash deployOpenShift.sh \"${var.admin_username}\" \"${var.openshift_password}\" \"${var.key_vault_secret}\" \"${var.openshift_cluster_prefix}-master\" \"${azurerm_public_ip.openshift_master_pip.fqdn}\" \"${azurerm_public_ip.openshift_master_pip.ip_address}\" \"${var.openshift_cluster_prefix}-infra\" \"${var.openshift_cluster_prefix}-node\" \"${var.node_instance_count}\" \"${var.infra_instance_count}\" \"${var.master_instance_count}\" \"${var.default_sub_domain_type}\" \"${azurerm_storage_account.registry_storage_account.name}\" \"${azurerm_storage_account.registry_storage_account.primary_access_key}\" \"${var.tenant_id}\" \"${var.subscription_id}\" \"${var.aad_client_id}\" \"${var.aad_client_secret}\" \"${azurerm_resource_group.rg.name}\" \"${azurerm_resource_group.rg.location}\" \"${var.key_vault_name}\""
                            ]
                        }
                    }
                ],
                "resource_group_name": "${azurerm_resource_group.rg.name}",
                "storage_data_disk": {
                    "create_option": "Empty",
                    "disk_size_gb": "${var.data_disk_size}",
                    "lun": 0,
                    "name": "${var.openshift_cluster_prefix}-master-docker-pool${count.index}",
                    "vhd_uri": "${azurerm_storage_account.master_storage_account.primary_blob_endpoint}vhds/${var.openshift_cluster_prefix}-master-docker-pool${count.index}.vhd"
                },
                "storage_image_reference": {
                    "offer": "${lookup(var.os_image_map, join(\"_offer\", list(var.os_image, \"\")))}",
                    "publisher": "${lookup(var.os_image_map, join(\"_publisher\", list(var.os_image, \"\")))}",
                    "sku": "${lookup(var.os_image_map, join(\"_sku\", list(var.os_image, \"\")))}",
                    "version": "${lookup(var.os_image_map, join(\"_version\", list(var.os_image, \"\")))}"
                },
                "storage_os_disk": {
                    "caching": "ReadWrite",
                    "create_option": "FromImage",
                    "disk_size_gb": 60,
                    "name": "${var.openshift_cluster_prefix}-master-osdisk${count.index}",
                    "vhd_uri": "${azurerm_storage_account.master_storage_account.primary_blob_endpoint}vhds/${var.openshift_cluster_prefix}-master-osdisk${count.index}.vhd"
                },
                "tags": {
                    "displayName": "${var.openshift_cluster_prefix}-master VM Creation"
                },
                "vm_size": "${var.master_vm_size}"
            },
            "group": 20000,
            "label": "[root] azurerm_virtual_machine.master",
            "resource_name": "master",
            "simple_name": "azurerm_virtual_machine.master",
            "svg_id": "node_36",
            "type": "azurerm_virtual_machine"
        },
        {
            "cluster": "root",
            "definition": {
                "availability_set_id": "${azurerm_availability_set.node.id}",
                "connection": {
                    "bastion_host": "${azurerm_public_ip.bastion_pip.fqdn}",
                    "bastion_private_key": "${file(var.connection_private_ssh_key_path)}",
                    "bastion_user": "${var.admin_username}",
                    "host": "${element(azurerm_network_interface.node_nic.*.private_ip_address, count.index)}",
                    "private_key": "${file(var.connection_private_ssh_key_path)}",
                    "type": "ssh",
                    "user": "${var.admin_username}"
                },
                "count": "${var.node_instance_count}",
                "delete_data_disks_on_termination": true,
                "delete_os_disk_on_termination": true,
                "location": "${azurerm_resource_group.rg.location}",
                "name": "${var.openshift_cluster_prefix}-node-${count.index}",
                "network_interface_ids": [
                    "${element(azurerm_network_interface.node_nic.*.id, count.index)}"
                ],
                "os_profile": {
                    "admin_password": "${var.openshift_password}",
                    "admin_username": "${var.admin_username}",
                    "computer_name": "${var.openshift_cluster_prefix}-node-${count.index}"
                },
                "os_profile_linux_config": {
                    "disable_password_authentication": true,
                    "ssh_keys": {
                        "key_data": "${var.ssh_public_key}",
                        "path": "/home/${var.admin_username}/.ssh/authorized_keys"
                    }
                },
                "provisioner": [
                    {
                        "file": {
                            "destination": "nodePrep.sh",
                            "source": "${var.openshift_script_path}/nodePrep.sh"
                        }
                    },
                    {
                        "remote-exec": {
                            "inline": [
                                "chmod +x nodePrep.sh",
                                "sudo bash nodePrep.sh"
                            ]
                        }
                    }
                ],
                "resource_group_name": "${azurerm_resource_group.rg.name}",
                "storage_data_disk": {
                    "create_option": "Empty",
                    "disk_size_gb": "${var.data_disk_size}",
                    "lun": 0,
                    "name": "${var.openshift_cluster_prefix}-node-docker-pool${count.index}",
                    "vhd_uri": "${azurerm_storage_account.nodeos_storage_account.primary_blob_endpoint}vhds/${var.openshift_cluster_prefix}-node-docker-pool${count.index}.vhd"
                },
                "storage_image_reference": {
                    "offer": "${lookup(var.os_image_map, join(\"_offer\", list(var.os_image, \"\")))}",
                    "publisher": "${lookup(var.os_image_map, join(\"_publisher\", list(var.os_image, \"\")))}",
                    "sku": "${lookup(var.os_image_map, join(\"_sku\", list(var.os_image, \"\")))}",
                    "version": "${lookup(var.os_image_map, join(\"_version\", list(var.os_image, \"\")))}"
                },
                "storage_os_disk": {
                    "caching": "ReadWrite",
                    "create_option": "FromImage",
                    "name": "${var.openshift_cluster_prefix}-node-osdisk",
                    "vhd_uri": "${azurerm_storage_account.nodeos_storage_account.primary_blob_endpoint}vhds/${var.openshift_cluster_prefix}-node-osdisk${count.index}.vhd"
                },
                "tags": {
                    "displayName": "${var.openshift_cluster_prefix}-node VM Creation"
                },
                "vm_size": "${var.node_vm_size}"
            },
            "group": 20000,
            "label": "[root] azurerm_virtual_machine.node",
            "resource_name": "node",
            "simple_name": "azurerm_virtual_machine.node",
            "svg_id": "node_37",
            "type": "azurerm_virtual_machine"
        },
        {
            "cluster": "root",
            "definition": {
                "address_space": [
                    "10.0.0.0/8"
                ],
                "depends_on": [
                    "azurerm_virtual_network.vnet"
                ],
                "location": "${azurerm_resource_group.rg.location}",
                "name": "openshiftvnet",
                "resource_group_name": "${azurerm_resource_group.rg.name}"
            },
            "group": 20000,
            "label": "[root] azurerm_virtual_network.vnet",
            "resource_name": "vnet",
            "simple_name": "azurerm_virtual_network.vnet",
            "svg_id": "node_38",
            "type": "azurerm_virtual_network"
        },
        {
            "cluster": "root",
            "definition": {
                "client_id": "${var.aad_client_id}",
                "client_secret": "${var.aad_client_secret}",
                "subscription_id": "${var.subscription_id}",
                "tenant_id": "${var.tenant_id}"
            },
            "group": 20000,
            "label": "[root] provider.azurerm",
            "resource_name": "azurerm",
            "simple_name": "provider.azurerm",
            "svg_id": "node_39",
            "type": "provider"
        },
        {
            "cluster": "cluster[root] azurerm_lb_nat_rule.master_lb_var_",
            "definition": {
                "default": 1,
                "description": "Number of OpenShift Masters nodes to deploy. 1 is non HA and 3 is for HA."
            },
            "group": 20000,
            "label": "[root] var.master_instance_count",
            "resource_name": "master_instance_count",
            "simple_name": "var.master_instance_count",
            "svg_id": "node_40",
            "type": "var"
        },
        {
            "cluster": "cluster[root] azurerm_network_interface.infra_nic_var_",
            "definition": {
                "default": 1,
                "description": "Number of OpenShift infra nodes to deploy. 1 is non HA.  Choose 2 or 3 for HA."
            },
            "group": 20000,
            "label": "[root] var.infra_instance_count",
            "resource_name": "infra_instance_count",
            "simple_name": "var.infra_instance_count",
            "svg_id": "node_41",
            "type": "var"
        },
        {
            "cluster": "cluster[root] azurerm_network_interface.node_nic_var_",
            "definition": {
                "default": 1,
                "description": "Number of OpenShift nodes to deploy. Allowed values: 1-30"
            },
            "group": 20000,
            "label": "[root] var.node_instance_count",
            "resource_name": "node_instance_count",
            "simple_name": "var.node_instance_count",
            "svg_id": "node_42",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "description": "Cluster Prefix used to configure domain name label and hostnames for all nodes - master, infra and nodes. Between 1 and 20 characters"
            },
            "group": 20000,
            "label": "[root] var.openshift_cluster_prefix",
            "resource_name": "openshift_cluster_prefix",
            "simple_name": "var.openshift_cluster_prefix",
            "svg_id": "node_43",
            "type": "var"
        },
        {
            "cluster": "cluster[root] azurerm_resource_group.rg_var_",
            "definition": {
                "default": "southcentralus",
                "description": "Location of the azure resource group."
            },
            "group": 20000,
            "label": "[root] var.resource_group_location",
            "resource_name": "resource_group_location",
            "simple_name": "var.resource_group_location",
            "svg_id": "node_44",
            "type": "var"
        },
        {
            "cluster": "cluster[root] azurerm_resource_group.rg_var_",
            "definition": {
                "description": "Name of the azure resource group in which you will deploy this template."
            },
            "group": 20000,
            "label": "[root] var.resource_group_name",
            "resource_name": "resource_group_name",
            "simple_name": "var.resource_group_name",
            "svg_id": "node_45",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "default": "LRS",
                "description": "This is the storage account Tier that you will need based on the vm size that you choose (value constraints)"
            },
            "group": 20000,
            "label": "[root] var.storage_account_replication_type",
            "resource_name": "storage_account_replication_type",
            "simple_name": "var.storage_account_replication_type",
            "svg_id": "node_46",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "default": "Standard",
                "description": "This is the storage account Tier to create. Possible values include Standard and Premium."
            },
            "group": 20000,
            "label": "[root] var.storage_account_tier",
            "resource_name": "storage_account_tier",
            "simple_name": "var.storage_account_tier",
            "svg_id": "node_47",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "default": "ocpadmin",
                "description": "Admin username for both OS login and OpenShift login"
            },
            "group": 20000,
            "label": "[root] var.admin_username",
            "resource_name": "admin_username",
            "simple_name": "var.admin_username",
            "svg_id": "node_48",
            "type": "var"
        },
        {
            "cluster": "cluster[root] azurerm_virtual_machine.bastion_var_",
            "definition": {
                "default": "Standard_D2_v2",
                "description": "Size of the Bastion Virtual Machine. Allowed values: Standard_A4, Standard_A5, Standard_A6, Standard_A7, Standard_A8, Standard_A9, Standard_A10, Standard_A11, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_v2, Standard_D2_v2, Standard_D3_v2, Standard_D4_v2, Standard_D5_v2, Standard_D11_v2, Standard_D12_v2, Standard_D13_v2, Standard_D14_v2, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_D1_v2, Standard_DS2, Standard_DS3, Standard_DS4, Standard_DS11, Standard_DS12, Standard_DS13, Standard_DS14, Standard_DS1_v2, Standard_DS2_v2, Standard_DS3_v2, Standard_DS4_v2, Standard_DS5_v2, Standard_DS11_v2, Standard_DS12_v2, Standard_DS13_v2, Standard_DS14_v2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5"
            },
            "group": 20000,
            "label": "[root] var.bastion_vm_size",
            "resource_name": "bastion_vm_size",
            "simple_name": "var.bastion_vm_size",
            "svg_id": "node_49",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "description": "Password for OpenShift login"
            },
            "group": 20000,
            "label": "[root] var.openshift_password",
            "resource_name": "openshift_password",
            "simple_name": "var.openshift_password",
            "svg_id": "node_50",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "default": "centos",
                "description": "Select from CentOS (centos) or RHEL (rhel) for the Operating System"
            },
            "group": 20000,
            "label": "[root] var.os_image",
            "resource_name": "os_image",
            "simple_name": "var.os_image",
            "svg_id": "node_51",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "default": {
                    "centos_offer": "CentOS",
                    "centos_publisher": "Openlogic",
                    "centos_sku": "7.3",
                    "centos_version": "latest",
                    "rhel_offer": "RHEL",
                    "rhel_publisher": "RedHat",
                    "rhel_sku": "7.2",
                    "rhel_version": "latest"
                },
                "description": "os image map",
                "type": "map"
            },
            "group": 20000,
            "label": "[root] var.os_image_map",
            "resource_name": "os_image_map",
            "simple_name": "var.os_image_map",
            "svg_id": "node_52",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "description": "Path to your SSH Public Key"
            },
            "group": 20000,
            "label": "[root] var.ssh_public_key",
            "resource_name": "ssh_public_key",
            "simple_name": "var.ssh_public_key",
            "svg_id": "node_53",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "description": "Path to the private ssh key used to connect to machines within the OpenShift cluster."
            },
            "group": 20000,
            "label": "[root] var.connection_private_ssh_key_path",
            "resource_name": "connection_private_ssh_key_path",
            "simple_name": "var.connection_private_ssh_key_path",
            "svg_id": "node_54",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "default": 128,
                "description": "Size of data disk to attach to nodes for Docker volume - valid sizes are 128 GB, 512 GB and 1023 GB"
            },
            "group": 20000,
            "label": "[root] var.data_disk_size",
            "resource_name": "data_disk_size",
            "simple_name": "var.data_disk_size",
            "svg_id": "node_55",
            "type": "var"
        },
        {
            "cluster": "cluster[root] azurerm_virtual_machine.infra_var_",
            "definition": {
                "default": "Standard_DS3_v2",
                "description": "Size of the Infra Virtual Machine. Allowed values: Standard_A4, Standard_A5, Standard_A6, Standard_A7, Standard_A8, Standard_A9, Standard_A10, Standard_A11,Standard_D1, Standard_D2, Standard_D3, Standard_D4,Standard_D11, Standard_D12, Standard_D13, Standard_D14,Standard_D1_v2, Standard_D2_v2, Standard_D3_v2, Standard_D4_v2, Standard_D5_v2,Standard_D11_v2, Standard_D12_v2, Standard_D13_v2, Standard_D14_v2,Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5,Standard_D1_v2, Standard_DS2, Standard_DS3, Standard_DS4,Standard_DS11, Standard_DS12, Standard_DS13, Standard_DS14,Standard_DS1_v2, Standard_DS2_v2, Standard_DS3_v2, Standard_DS4_v2, Standard_DS5_v2,Standard_DS11_v2, Standard_DS12_v2, Standard_DS13_v2, Standard_DS14_v2,Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5"
            },
            "group": 20000,
            "label": "[root] var.infra_vm_size",
            "resource_name": "infra_vm_size",
            "simple_name": "var.infra_vm_size",
            "svg_id": "node_56",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "description": "Local path to openshift scripts to prep nodes and install openshift origin"
            },
            "group": 20000,
            "label": "[root] var.openshift_script_path",
            "resource_name": "openshift_script_path",
            "simple_name": "var.openshift_script_path",
            "svg_id": "node_57",
            "type": "var"
        },
        {
            "cluster": "cluster[root] azurerm_virtual_machine.master_var_",
            "definition": {
                "default": "xipio",
                "description": "This will either be 'xipio' (if you don't have your own domain) or 'custom' if you have your own domain that you would like to use for routing"
            },
            "group": 20000,
            "label": "[root] var.default_sub_domain_type",
            "resource_name": "default_sub_domain_type",
            "simple_name": "var.default_sub_domain_type",
            "svg_id": "node_58",
            "type": "var"
        },
        {
            "cluster": "cluster[root] azurerm_virtual_machine.master_var_",
            "definition": {
                "description": "The name of the Key Vault you will use"
            },
            "group": 20000,
            "label": "[root] var.key_vault_name",
            "resource_name": "key_vault_name",
            "simple_name": "var.key_vault_name",
            "svg_id": "node_59",
            "type": "var"
        },
        {
            "cluster": "cluster[root] azurerm_virtual_machine.master_var_",
            "definition": {
                "description": "The Secret Name you used when creating the Secret (that contains the Private Key)"
            },
            "group": 20000,
            "label": "[root] var.key_vault_secret",
            "resource_name": "key_vault_secret",
            "simple_name": "var.key_vault_secret",
            "svg_id": "node_60",
            "type": "var"
        },
        {
            "cluster": "cluster[root] azurerm_virtual_machine.master_var_",
            "definition": {
                "default": "Standard_DS4_v2",
                "description": "Size of the Master Virtual Machine. Allowed values: Standard_A4, Standard_A5, Standard_A6, Standard_A7, Standard_A8, Standard_A9, Standard_A10, Standard_A11, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_v2, Standard_D2_v2, Standard_D3_v2, Standard_D4_v2, Standard_D5_v2, Standard_D11_v2, Standard_D12_v2, Standard_D13_v2, Standard_D14_v2, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_D1_v2, Standard_DS2, Standard_DS3, Standard_DS4, Standard_DS11, Standard_DS12, Standard_DS13, Standard_DS14, Standard_DS1_v2, Standard_DS2_v2, Standard_DS3_v2, Standard_DS4_v2, Standard_DS5_v2, Standard_DS11_v2, Standard_DS12_v2, Standard_DS13_v2, Standard_DS14_v2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5"
            },
            "group": 20000,
            "label": "[root] var.master_vm_size",
            "resource_name": "master_vm_size",
            "simple_name": "var.master_vm_size",
            "svg_id": "node_61",
            "type": "var"
        },
        {
            "cluster": "cluster[root] azurerm_virtual_machine.node_var_",
            "definition": {
                "default": "Standard_DS3_v2",
                "description": "Size of the Node Virtual Machine. Allowed values: Standard_A4, Standard_A5, Standard_A6, Standard_A7, Standard_A8, Standard_A9, Standard_A10, Standard_A11, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_v2, Standard_D2_v2, Standard_D3_v2, Standard_D4_v2, Standard_D5_v2, Standard_D11_v2, Standard_D12_v2, Standard_D13_v2, Standard_D14_v2, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_D1_v2, Standard_DS2, Standard_DS3, Standard_DS4, Standard_DS11, Standard_DS12, Standard_DS13, Standard_DS14, Standard_DS1_v2, Standard_DS2_v2, Standard_DS3_v2, Standard_DS4_v2, Standard_DS5_v2, Standard_DS11_v2, Standard_DS12_v2, Standard_DS13_v2, Standard_DS14_v2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5"
            },
            "group": 20000,
            "label": "[root] var.node_vm_size",
            "resource_name": "node_vm_size",
            "simple_name": "var.node_vm_size",
            "svg_id": "node_62",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] meta.count-boundary (count boundary fixup)",
            "resource_name": "count-boundary",
            "simple_name": "meta.count-boundary (count boundary fixup)",
            "svg_id": "node_63",
            "type": "meta"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] azurerm_storage_account.infra_storage_account",
            "definition": {
                "value": "${azurerm_storage_account.infra_storage_account.name}"
            },
            "group": 20000,
            "label": "[root] output.infra_storage_account_name",
            "resource_name": "infra_storage_account_name",
            "simple_name": "output.infra_storage_account_name",
            "svg_id": "node_64",
            "type": "output"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] azurerm_storage_account.nodedata_storage_account",
            "definition": {
                "value": "${azurerm_storage_account.nodedata_storage_account.name}"
            },
            "group": 20000,
            "label": "[root] output.node_data_storage_account_name",
            "resource_name": "node_data_storage_account_name",
            "simple_name": "output.node_data_storage_account_name",
            "svg_id": "node_65",
            "type": "output"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] azurerm_storage_account.nodeos_storage_account",
            "definition": {
                "value": "${azurerm_storage_account.nodeos_storage_account.name}"
            },
            "group": 20000,
            "label": "[root] output.node_os_storage_account_name",
            "resource_name": "node_os_storage_account_name",
            "simple_name": "output.node_os_storage_account_name",
            "svg_id": "node_66",
            "type": "output"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] azurerm_public_ip.openshift_master_pip",
            "definition": {
                "value": "https://${azurerm_public_ip.openshift_master_pip.fqdn}:8443/console"
            },
            "group": 20000,
            "label": "[root] output.openshift_console_url",
            "resource_name": "openshift_console_url",
            "simple_name": "output.openshift_console_url",
            "svg_id": "node_67",
            "type": "output"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] azurerm_public_ip.infra_lb_pip",
            "definition": {
                "value": "${azurerm_public_ip.infra_lb_pip.fqdn}"
            },
            "group": 20000,
            "label": "[root] output.openshift_infra_load_balancer_fqdn",
            "resource_name": "openshift_infra_load_balancer_fqdn",
            "simple_name": "output.openshift_infra_load_balancer_fqdn",
            "svg_id": "node_68",
            "type": "output"
        },
        {
            "cluster": "root",
            "definition": {
                "value": "ssh ${var.admin_username}@${azurerm_public_ip.openshift_master_pip.fqdn} -p 2200"
            },
            "group": 20000,
            "label": "[root] output.openshift_master_ssh",
            "resource_name": "openshift_master_ssh",
            "simple_name": "output.openshift_master_ssh",
            "svg_id": "node_69",
            "type": "output"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_var_",
            "definition": {
                "default": "2015-01-01"
            },
            "group": 20000,
            "label": "[root] var.api_version",
            "resource_name": "api_version",
            "simple_name": "var.api_version",
            "svg_id": "node_70",
            "type": "var"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_var_",
            "definition": {
                "default": "2015-06-15"
            },
            "group": 20000,
            "label": "[root] var.api_version_compute",
            "resource_name": "api_version_compute",
            "simple_name": "var.api_version_compute",
            "svg_id": "node_71",
            "type": "var"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_var_",
            "definition": {
                "default": "contoso.com",
                "description": "The wildcard DNS name you would like to use for routing if you selected 'custom' above. If you selected 'xipio' above, then this field will be ignored"
            },
            "group": 20000,
            "label": "[root] var.default_sub_domain",
            "resource_name": "default_sub_domain",
            "simple_name": "var.default_sub_domain",
            "svg_id": "node_72",
            "type": "var"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_var_",
            "definition": {
                "default": 60,
                "description": "storage os disk size"
            },
            "group": 20000,
            "label": "[root] var.disk_size_gb",
            "resource_name": "disk_size_gb",
            "simple_name": "var.disk_size_gb",
            "svg_id": "node_73",
            "type": "var"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_var_",
            "definition": {
                "description": "The name of the Resource Group that contains the Key Vault"
            },
            "group": 20000,
            "label": "[root] var.key_vault_resource_group",
            "resource_name": "key_vault_resource_group",
            "simple_name": "var.key_vault_resource_group",
            "svg_id": "node_74",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": {
                "client_id": "${var.aad_client_id}",
                "client_secret": "${var.aad_client_secret}",
                "subscription_id": "${var.subscription_id}",
                "tenant_id": "${var.tenant_id}"
            },
            "group": 20000,
            "label": "[root] provider.azurerm (close)",
            "resource_name": "azurerm",
            "simple_name": "provider.azurerm (close)",
            "svg_id": "node_75",
            "type": "provider"
        },
        {
            "cluster": "cluster[root] provider.azurerm_var_",
            "definition": {
                "description": "Azure Active Directory Client ID also known as Application ID for Service Principal"
            },
            "group": 20000,
            "label": "[root] var.aad_client_id",
            "resource_name": "aad_client_id",
            "simple_name": "var.aad_client_id",
            "svg_id": "node_76",
            "type": "var"
        },
        {
            "cluster": "cluster[root] provider.azurerm_var_",
            "definition": {
                "description": "Azure Active Directory Client Secret for Service Principal"
            },
            "group": 20000,
            "label": "[root] var.aad_client_secret",
            "resource_name": "aad_client_secret",
            "simple_name": "var.aad_client_secret",
            "svg_id": "node_77",
            "type": "var"
        },
        {
            "cluster": "cluster[root] provider.azurerm_var_",
            "definition": {
                "description": "Subscription ID of the key vault"
            },
            "group": 20000,
            "label": "[root] var.subscription_id",
            "resource_name": "subscription_id",
            "simple_name": "var.subscription_id",
            "svg_id": "node_78",
            "type": "var"
        },
        {
            "cluster": "cluster[root] provider.azurerm_var_",
            "definition": {
                "description": "Tenant ID with access to your key vault and subscription"
            },
            "group": 20000,
            "label": "[root] var.tenant_id",
            "resource_name": "tenant_id",
            "simple_name": "var.tenant_id",
            "svg_id": "node_79",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] provisioner.file (close)",
            "resource_name": "file",
            "simple_name": "provisioner.file (close)",
            "svg_id": "node_80",
            "type": "provisioner"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] provisioner.remote-exec (close)",
            "resource_name": "remote-exec",
            "simple_name": "provisioner.remote-exec (close)",
            "svg_id": "node_81",
            "type": "provisioner"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] root",
            "resource_name": "",
            "simple_name": "root",
            "svg_id": "node_82",
            "type": ""
        }
    ]
}
