{
    "edges": [
        {
            "edge_type": 1,
            "source": "[root] kubernetes_replication_controller.example",
            "svg_id": "edge_0",
            "target": "[root] provider.kubernetes"
        },
        {
            "edge_type": 1,
            "source": "[root] kubernetes_replication_controller.example",
            "svg_id": "edge_1",
            "target": "[root] var.nginx_version"
        },
        {
            "edge_type": 1,
            "source": "[root] kubernetes_service.example",
            "svg_id": "edge_2",
            "target": "[root] kubernetes_replication_controller.example"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_3",
            "target": "[root] output.lb_ip"
        },
        {
            "edge_type": 1,
            "source": "[root] output.lb_ip",
            "svg_id": "edge_4",
            "target": "[root] kubernetes_service.example"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.kubernetes (close)",
            "svg_id": "edge_5",
            "target": "[root] kubernetes_service.example"
        },
        {
            "edge_type": 1,
            "source": "[root] root",
            "svg_id": "edge_6",
            "target": "[root] meta.count-boundary (count boundary fixup)"
        },
        {
            "edge_type": 1,
            "source": "[root] root",
            "svg_id": "edge_7",
            "target": "[root] provider.kubernetes (close)"
        }
    ],
    "nodes": [
        {
            "cluster": "root",
            "definition": {
                "metadata": {
                    "labels": {
                        "App": "TerraformNginxExample"
                    },
                    "name": "terraform-nginx-example"
                },
                "spec": {
                    "selector": {
                        "App": "TerraformNginxExample"
                    },
                    "template": {
                        "container": {
                            "image": "nginx:${var.nginx_version}",
                            "liveness_probe": {
                                "http_get": {
                                    "path": "/index.html",
                                    "port": 80
                                },
                                "initial_delay_seconds": 30,
                                "timeout_seconds": 1
                            },
                            "name": "example",
                            "port": {
                                "container_port": 80
                            },
                            "resources": {
                                "limits": {
                                    "cpu": "0.5",
                                    "memory": "512Mi"
                                },
                                "requests": {
                                    "cpu": "250m",
                                    "memory": "50Mi"
                                }
                            }
                        }
                    }
                }
            },
            "group": 20000,
            "label": "[root] kubernetes_replication_controller.example",
            "resource_name": "example",
            "simple_name": "kubernetes_replication_controller.example",
            "svg_id": "node_0",
            "type": "kubernetes_replication_controller"
        },
        {
            "cluster": "root",
            "definition": {
                "metadata": {
                    "name": "terraform-nginx-example"
                },
                "spec": {
                    "port": {
                        "port": 80,
                        "target_port": 80
                    },
                    "selector": {
                        "App": "${kubernetes_replication_controller.example.metadata.0.labels.App}"
                    },
                    "session_affinity": "ClientIP",
                    "type": "LoadBalancer"
                }
            },
            "group": 20000,
            "label": "[root] kubernetes_service.example",
            "resource_name": "example",
            "simple_name": "kubernetes_service.example",
            "svg_id": "node_1",
            "type": "kubernetes_service"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] provider.kubernetes",
            "resource_name": "kubernetes",
            "simple_name": "provider.kubernetes",
            "svg_id": "node_2",
            "type": "provider"
        },
        {
            "cluster": "cluster[root] kubernetes_replication_controller.example_var_",
            "definition": {
                "default": "1.7.8"
            },
            "group": 20000,
            "label": "[root] var.nginx_version",
            "resource_name": "nginx_version",
            "simple_name": "var.nginx_version",
            "svg_id": "node_3",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] meta.count-boundary (count boundary fixup)",
            "resource_name": "count-boundary",
            "simple_name": "meta.count-boundary (count boundary fixup)",
            "svg_id": "node_4",
            "type": "meta"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] kubernetes_service.example",
            "definition": {
                "value": "${kubernetes_service.example.load_balancer_ingress.0.ip}"
            },
            "group": 20000,
            "label": "[root] output.lb_ip",
            "resource_name": "lb_ip",
            "simple_name": "output.lb_ip",
            "svg_id": "node_5",
            "type": "output"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] provider.kubernetes (close)",
            "resource_name": "kubernetes",
            "simple_name": "provider.kubernetes (close)",
            "svg_id": "node_6",
            "type": "provider"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] root",
            "resource_name": "",
            "simple_name": "root",
            "svg_id": "node_7",
            "type": ""
        }
    ]
}
