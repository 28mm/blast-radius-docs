{
    "edges": [
        {
            "edge_type": 1,
            "source": "[root] aws_cloudwatch_event_rule.foo",
            "svg_id": "edge_0",
            "target": "[root] provider.aws"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_cloudwatch_event_rule.foo",
            "svg_id": "edge_1",
            "target": "[root] var.rule_name"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_cloudwatch_event_target.bar",
            "svg_id": "edge_2",
            "target": "[root] aws_cloudwatch_event_rule.foo"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_cloudwatch_event_target.bar",
            "svg_id": "edge_3",
            "target": "[root] aws_sns_topic.foo"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_cloudwatch_event_target.bar",
            "svg_id": "edge_4",
            "target": "[root] var.target_name"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_sns_topic.foo",
            "svg_id": "edge_5",
            "target": "[root] provider.aws"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_sns_topic.foo",
            "svg_id": "edge_6",
            "target": "[root] var.sns_topic_name"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_7",
            "target": "[root] aws_cloudwatch_event_target.bar"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_8",
            "target": "[root] output.rule_arn"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_9",
            "target": "[root] output.sns_topic_arn"
        },
        {
            "edge_type": 1,
            "source": "[root] output.rule_arn",
            "svg_id": "edge_10",
            "target": "[root] aws_cloudwatch_event_rule.foo"
        },
        {
            "edge_type": 1,
            "source": "[root] output.sns_topic_arn",
            "svg_id": "edge_11",
            "target": "[root] aws_sns_topic.foo"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.aws (close)",
            "svg_id": "edge_12",
            "target": "[root] aws_cloudwatch_event_target.bar"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.aws",
            "svg_id": "edge_13",
            "target": "[root] var.aws_region"
        },
        {
            "edge_type": 1,
            "source": "[root] root",
            "svg_id": "edge_14",
            "target": "[root] meta.count-boundary (count boundary fixup)"
        },
        {
            "edge_type": 1,
            "source": "[root] root",
            "svg_id": "edge_15",
            "target": "[root] provider.aws (close)"
        }
    ],
    "nodes": [
        {
            "cluster": "root",
            "definition": {
                "event_pattern": "{\n  \"detail-type\": [\n    \"AWS API Call via CloudTrail\"\n  ],\n  \"detail\": {\n    \"eventSource\": [\n      \"cloudtrail.amazonaws.com\"\n    ]\n  }\n}",
                "name": "${var.rule_name}"
            },
            "group": 20000,
            "label": "[root] aws_cloudwatch_event_rule.foo",
            "resource_name": "foo",
            "simple_name": "aws_cloudwatch_event_rule.foo",
            "svg_id": "node_0",
            "type": "aws_cloudwatch_event_rule"
        },
        {
            "cluster": "root",
            "definition": {
                "arn": "${aws_sns_topic.foo.arn}",
                "rule": "${aws_cloudwatch_event_rule.foo.name}",
                "target_id": "${var.target_name}"
            },
            "group": 20000,
            "label": "[root] aws_cloudwatch_event_target.bar",
            "resource_name": "bar",
            "simple_name": "aws_cloudwatch_event_target.bar",
            "svg_id": "node_1",
            "type": "aws_cloudwatch_event_target"
        },
        {
            "cluster": "root",
            "definition": {
                "name": "${var.sns_topic_name}"
            },
            "group": 20000,
            "label": "[root] aws_sns_topic.foo",
            "resource_name": "foo",
            "simple_name": "aws_sns_topic.foo",
            "svg_id": "node_2",
            "type": "aws_sns_topic"
        },
        {
            "cluster": "root",
            "definition": {
                "region": "${var.aws_region}"
            },
            "group": 20000,
            "label": "[root] provider.aws",
            "resource_name": "aws",
            "simple_name": "provider.aws",
            "svg_id": "node_3",
            "type": "provider"
        },
        {
            "cluster": "cluster[root] aws_cloudwatch_event_rule.foo_var_",
            "definition": {
                "default": "tf-example-cloudwatch-event-rule-for-sns",
                "description": "The name of the CloudWatch Event Rule"
            },
            "group": 20000,
            "label": "[root] var.rule_name",
            "resource_name": "rule_name",
            "simple_name": "var.rule_name",
            "svg_id": "node_4",
            "type": "var"
        },
        {
            "cluster": "cluster[root] aws_cloudwatch_event_target.bar_var_",
            "definition": {
                "default": "tf-example-cloudwatch-event-target-for-sns",
                "description": "The name of the CloudWatch Event Target"
            },
            "group": 20000,
            "label": "[root] var.target_name",
            "resource_name": "target_name",
            "simple_name": "var.target_name",
            "svg_id": "node_5",
            "type": "var"
        },
        {
            "cluster": "cluster[root] aws_sns_topic.foo_var_",
            "definition": {
                "default": "tf-example-sns-topic",
                "description": "The name of the SNS Topic to send events to"
            },
            "group": 20000,
            "label": "[root] var.sns_topic_name",
            "resource_name": "sns_topic_name",
            "simple_name": "var.sns_topic_name",
            "svg_id": "node_6",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] meta.count-boundary (count boundary fixup)",
            "resource_name": "count-boundary",
            "simple_name": "meta.count-boundary (count boundary fixup)",
            "svg_id": "node_7",
            "type": "meta"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] aws_cloudwatch_event_rule.foo",
            "definition": {
                "value": "${aws_cloudwatch_event_rule.foo.arn}"
            },
            "group": 20000,
            "label": "[root] output.rule_arn",
            "resource_name": "rule_arn",
            "simple_name": "output.rule_arn",
            "svg_id": "node_8",
            "type": "output"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] aws_sns_topic.foo",
            "definition": {
                "value": "${aws_sns_topic.foo.arn}"
            },
            "group": 20000,
            "label": "[root] output.sns_topic_arn",
            "resource_name": "sns_topic_arn",
            "simple_name": "output.sns_topic_arn",
            "svg_id": "node_9",
            "type": "output"
        },
        {
            "cluster": "root",
            "definition": {
                "region": "${var.aws_region}"
            },
            "group": 20000,
            "label": "[root] provider.aws (close)",
            "resource_name": "aws",
            "simple_name": "provider.aws (close)",
            "svg_id": "node_10",
            "type": "provider"
        },
        {
            "cluster": "cluster[root] provider.aws_var_",
            "definition": {
                "default": "us-east-1",
                "description": "The AWS region to create resources in."
            },
            "group": 20000,
            "label": "[root] var.aws_region",
            "resource_name": "aws_region",
            "simple_name": "var.aws_region",
            "svg_id": "node_11",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] root",
            "resource_name": "",
            "simple_name": "root",
            "svg_id": "node_12",
            "type": ""
        }
    ]
}
