{
    "edges": [
        {
            "edge_type": 1,
            "source": "[root] aws_alb.main",
            "svg_id": "edge_0",
            "target": "[root] aws_security_group.lb_sg"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_alb.main",
            "svg_id": "edge_1",
            "target": "[root] aws_subnet.main"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_alb_listener.front_end",
            "svg_id": "edge_2",
            "target": "[root] aws_alb.main"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_alb_listener.front_end",
            "svg_id": "edge_3",
            "target": "[root] aws_alb_target_group.test"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_alb_target_group.test",
            "svg_id": "edge_4",
            "target": "[root] aws_vpc.main"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_autoscaling_group.app",
            "svg_id": "edge_5",
            "target": "[root] aws_launch_configuration.app"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_autoscaling_group.app",
            "svg_id": "edge_6",
            "target": "[root] aws_subnet.main"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_autoscaling_group.app",
            "svg_id": "edge_7",
            "target": "[root] var.asg_desired"
        },
        {
            "edge_type": 2,
            "source": "[root] aws_autoscaling_group.app",
            "svg_id": "edge_8",
            "target": "[root] var.asg_max"
        },
        {
            "edge_type": 2,
            "source": "[root] aws_autoscaling_group.app",
            "svg_id": "edge_9",
            "target": "[root] var.asg_min"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_cloudwatch_log_group.app",
            "svg_id": "edge_10",
            "target": "[root] provider.aws"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_cloudwatch_log_group.ecs",
            "svg_id": "edge_11",
            "target": "[root] provider.aws"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_ecs_cluster.main",
            "svg_id": "edge_12",
            "target": "[root] provider.aws"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_ecs_service.test",
            "svg_id": "edge_13",
            "target": "[root] aws_alb_listener.front_end"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_ecs_service.test",
            "svg_id": "edge_14",
            "target": "[root] aws_ecs_cluster.main"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_ecs_service.test",
            "svg_id": "edge_15",
            "target": "[root] aws_ecs_task_definition.ghost"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_ecs_service.test",
            "svg_id": "edge_16",
            "target": "[root] aws_iam_role_policy.ecs_service"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_ecs_task_definition.ghost",
            "svg_id": "edge_17",
            "target": "[root] data.template_file.task_definition"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_iam_instance_profile.app",
            "svg_id": "edge_18",
            "target": "[root] aws_iam_role.app_instance"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_iam_role.app_instance",
            "svg_id": "edge_19",
            "target": "[root] provider.aws"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_iam_role.ecs_service",
            "svg_id": "edge_20",
            "target": "[root] provider.aws"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_iam_role_policy.ecs_service",
            "svg_id": "edge_21",
            "target": "[root] aws_iam_role.ecs_service"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_iam_role_policy.instance",
            "svg_id": "edge_22",
            "target": "[root] aws_iam_role.app_instance"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_iam_role_policy.instance",
            "svg_id": "edge_23",
            "target": "[root] data.template_file.instance_profile"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_internet_gateway.gw",
            "svg_id": "edge_24",
            "target": "[root] aws_vpc.main"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_launch_configuration.app",
            "svg_id": "edge_25",
            "target": "[root] aws_iam_instance_profile.app"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_launch_configuration.app",
            "svg_id": "edge_26",
            "target": "[root] aws_security_group.instance_sg"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_launch_configuration.app",
            "svg_id": "edge_27",
            "target": "[root] data.aws_ami.stable_coreos"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_launch_configuration.app",
            "svg_id": "edge_28",
            "target": "[root] data.template_file.cloud_config"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_launch_configuration.app",
            "svg_id": "edge_29",
            "target": "[root] var.instance_type"
        },
        {
            "edge_type": 2,
            "source": "[root] aws_launch_configuration.app",
            "svg_id": "edge_30",
            "target": "[root] var.key_name"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_route_table.r",
            "svg_id": "edge_31",
            "target": "[root] aws_internet_gateway.gw"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_route_table_association.a",
            "svg_id": "edge_32",
            "target": "[root] aws_route_table.r"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_route_table_association.a",
            "svg_id": "edge_33",
            "target": "[root] aws_subnet.main"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_security_group.instance_sg",
            "svg_id": "edge_34",
            "target": "[root] aws_security_group.lb_sg"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_security_group.instance_sg",
            "svg_id": "edge_35",
            "target": "[root] var.admin_cidr_ingress"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_security_group.lb_sg",
            "svg_id": "edge_36",
            "target": "[root] aws_vpc.main"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_subnet.main",
            "svg_id": "edge_37",
            "target": "[root] aws_vpc.main"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_subnet.main",
            "svg_id": "edge_38",
            "target": "[root] data.aws_availability_zones.available"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_subnet.main",
            "svg_id": "edge_39",
            "target": "[root] var.az_count"
        },
        {
            "edge_type": 1,
            "source": "[root] aws_vpc.main",
            "svg_id": "edge_40",
            "target": "[root] provider.aws"
        },
        {
            "edge_type": 1,
            "source": "[root] data.aws_ami.stable_coreos",
            "svg_id": "edge_41",
            "target": "[root] provider.aws"
        },
        {
            "edge_type": 1,
            "source": "[root] data.aws_availability_zones.available",
            "svg_id": "edge_42",
            "target": "[root] provider.aws"
        },
        {
            "edge_type": 1,
            "source": "[root] data.template_file.cloud_config",
            "svg_id": "edge_43",
            "target": "[root] aws_cloudwatch_log_group.ecs"
        },
        {
            "edge_type": 1,
            "source": "[root] data.template_file.cloud_config",
            "svg_id": "edge_44",
            "target": "[root] aws_ecs_cluster.main"
        },
        {
            "edge_type": 1,
            "source": "[root] data.template_file.cloud_config",
            "svg_id": "edge_45",
            "target": "[root] provider.template"
        },
        {
            "edge_type": 1,
            "source": "[root] data.template_file.instance_profile",
            "svg_id": "edge_46",
            "target": "[root] aws_cloudwatch_log_group.app"
        },
        {
            "edge_type": 1,
            "source": "[root] data.template_file.instance_profile",
            "svg_id": "edge_47",
            "target": "[root] aws_cloudwatch_log_group.ecs"
        },
        {
            "edge_type": 1,
            "source": "[root] data.template_file.instance_profile",
            "svg_id": "edge_48",
            "target": "[root] provider.template"
        },
        {
            "edge_type": 1,
            "source": "[root] data.template_file.task_definition",
            "svg_id": "edge_49",
            "target": "[root] aws_cloudwatch_log_group.app"
        },
        {
            "edge_type": 1,
            "source": "[root] data.template_file.task_definition",
            "svg_id": "edge_50",
            "target": "[root] provider.template"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_51",
            "target": "[root] aws_ecs_service.test"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_52",
            "target": "[root] aws_iam_role_policy.instance"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_53",
            "target": "[root] aws_route_table_association.a"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_54",
            "target": "[root] output.asg_name"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_55",
            "target": "[root] output.elb_hostname"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_56",
            "target": "[root] output.instance_security_group"
        },
        {
            "edge_type": 1,
            "source": "[root] meta.count-boundary (count boundary fixup)",
            "svg_id": "edge_57",
            "target": "[root] output.launch_configuration"
        },
        {
            "edge_type": 1,
            "source": "[root] output.asg_name",
            "svg_id": "edge_58",
            "target": "[root] aws_autoscaling_group.app"
        },
        {
            "edge_type": 1,
            "source": "[root] output.elb_hostname",
            "svg_id": "edge_59",
            "target": "[root] aws_alb.main"
        },
        {
            "edge_type": 1,
            "source": "[root] output.instance_security_group",
            "svg_id": "edge_60",
            "target": "[root] aws_security_group.instance_sg"
        },
        {
            "edge_type": 1,
            "source": "[root] output.launch_configuration",
            "svg_id": "edge_61",
            "target": "[root] aws_launch_configuration.app"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.aws (close)",
            "svg_id": "edge_62",
            "target": "[root] aws_autoscaling_group.app"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.aws (close)",
            "svg_id": "edge_63",
            "target": "[root] aws_ecs_service.test"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.aws (close)",
            "svg_id": "edge_64",
            "target": "[root] aws_iam_role_policy.instance"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.aws (close)",
            "svg_id": "edge_65",
            "target": "[root] aws_route_table_association.a"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.aws",
            "svg_id": "edge_66",
            "target": "[root] var.aws_region"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.template (close)",
            "svg_id": "edge_67",
            "target": "[root] data.template_file.cloud_config"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.template (close)",
            "svg_id": "edge_68",
            "target": "[root] data.template_file.instance_profile"
        },
        {
            "edge_type": 1,
            "source": "[root] provider.template (close)",
            "svg_id": "edge_69",
            "target": "[root] data.template_file.task_definition"
        },
        {
            "edge_type": 1,
            "source": "[root] root",
            "svg_id": "edge_70",
            "target": "[root] meta.count-boundary (count boundary fixup)"
        },
        {
            "edge_type": 1,
            "source": "[root] root",
            "svg_id": "edge_71",
            "target": "[root] provider.aws (close)"
        },
        {
            "edge_type": 1,
            "source": "[root] root",
            "svg_id": "edge_72",
            "target": "[root] provider.template (close)"
        },
        {
            "edge_type": 3,
            "source": "[root] var.asg_desired",
            "svg_id": "edge_73",
            "target": "[root] var.asg_max"
        },
        {
            "edge_type": 3,
            "source": "[root] var.asg_max",
            "svg_id": "edge_74",
            "target": "[root] var.asg_min"
        },
        {
            "edge_type": 3,
            "source": "[root] var.instance_type",
            "svg_id": "edge_75",
            "target": "[root] var.key_name"
        }
    ],
    "nodes": [
        {
            "cluster": "root",
            "definition": {
                "name": "tf-example-alb-ecs",
                "security_groups": [
                    "${aws_security_group.lb_sg.id}"
                ],
                "subnets": [
                    "${aws_subnet.main.*.id}"
                ]
            },
            "group": 20000,
            "label": "[root] aws_alb.main",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "main",
            "simple_name": "aws_alb.main",
            "svg_id": "node_0",
            "type": "aws_alb"
        },
        {
            "cluster": "root",
            "definition": {
                "default_action": {
                    "target_group_arn": "${aws_alb_target_group.test.id}",
                    "type": "forward"
                },
                "load_balancer_arn": "${aws_alb.main.id}",
                "port": "80",
                "protocol": "HTTP"
            },
            "group": 20000,
            "label": "[root] aws_alb_listener.front_end",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "front_end",
            "simple_name": "aws_alb_listener.front_end",
            "svg_id": "node_1",
            "type": "aws_alb_listener"
        },
        {
            "cluster": "root",
            "definition": {
                "name": "tf-example-ecs-ghost",
                "port": 80,
                "protocol": "HTTP",
                "vpc_id": "${aws_vpc.main.id}"
            },
            "group": 20000,
            "label": "[root] aws_alb_target_group.test",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "test",
            "simple_name": "aws_alb_target_group.test",
            "svg_id": "node_2",
            "type": "aws_alb_target_group"
        },
        {
            "cluster": "root",
            "definition": {
                "desired_capacity": "${var.asg_desired}",
                "launch_configuration": "${aws_launch_configuration.app.name}",
                "max_size": "${var.asg_max}",
                "min_size": "${var.asg_min}",
                "name": "tf-test-asg",
                "vpc_zone_identifier": [
                    "${aws_subnet.main.*.id}"
                ]
            },
            "group": 20000,
            "label": "[root] aws_autoscaling_group.app",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "app",
            "simple_name": "aws_autoscaling_group.app",
            "svg_id": "node_3",
            "type": "aws_autoscaling_group"
        },
        {
            "cluster": "root",
            "definition": {
                "name": "tf-ecs-group/app-ghost"
            },
            "group": 20000,
            "label": "[root] aws_cloudwatch_log_group.app",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "app",
            "simple_name": "aws_cloudwatch_log_group.app",
            "svg_id": "node_4",
            "type": "aws_cloudwatch_log_group"
        },
        {
            "cluster": "root",
            "definition": {
                "name": "tf-ecs-group/ecs-agent"
            },
            "group": 20000,
            "label": "[root] aws_cloudwatch_log_group.ecs",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "ecs",
            "simple_name": "aws_cloudwatch_log_group.ecs",
            "svg_id": "node_5",
            "type": "aws_cloudwatch_log_group"
        },
        {
            "cluster": "root",
            "definition": {
                "name": "terraform_example_ecs_cluster"
            },
            "group": 20000,
            "label": "[root] aws_ecs_cluster.main",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "main",
            "simple_name": "aws_ecs_cluster.main",
            "svg_id": "node_6",
            "type": "aws_ecs_cluster"
        },
        {
            "cluster": "root",
            "definition": {
                "cluster": "${aws_ecs_cluster.main.id}",
                "depends_on": [
                    "aws_iam_role_policy.ecs_service",
                    "aws_alb_listener.front_end"
                ],
                "desired_count": 1,
                "iam_role": "${aws_iam_role.ecs_service.name}",
                "load_balancer": {
                    "container_name": "ghost",
                    "container_port": "2368",
                    "target_group_arn": "${aws_alb_target_group.test.id}"
                },
                "name": "tf-example-ecs-ghost",
                "task_definition": "${aws_ecs_task_definition.ghost.arn}"
            },
            "group": 20000,
            "label": "[root] aws_ecs_service.test",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "test",
            "simple_name": "aws_ecs_service.test",
            "svg_id": "node_7",
            "type": "aws_ecs_service"
        },
        {
            "cluster": "root",
            "definition": {
                "container_definitions": "${data.template_file.task_definition.rendered}",
                "family": "tf_example_ghost_td"
            },
            "group": 20000,
            "label": "[root] aws_ecs_task_definition.ghost",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "ghost",
            "simple_name": "aws_ecs_task_definition.ghost",
            "svg_id": "node_8",
            "type": "aws_ecs_task_definition"
        },
        {
            "cluster": "root",
            "definition": {
                "name": "tf-ecs-instprofile",
                "role": "${aws_iam_role.app_instance.name}"
            },
            "group": 20000,
            "label": "[root] aws_iam_instance_profile.app",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "app",
            "simple_name": "aws_iam_instance_profile.app",
            "svg_id": "node_9",
            "type": "aws_iam_instance_profile"
        },
        {
            "cluster": "root",
            "definition": {
                "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}",
                "name": "tf-ecs-example-instance-role"
            },
            "group": 20000,
            "label": "[root] aws_iam_role.app_instance",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "app_instance",
            "simple_name": "aws_iam_role.app_instance",
            "svg_id": "node_10",
            "type": "aws_iam_role"
        },
        {
            "cluster": "root",
            "definition": {
                "assume_role_policy": "{\n  \"Version\": \"2008-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ecs.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}",
                "name": "tf_example_ecs_role"
            },
            "group": 20000,
            "label": "[root] aws_iam_role.ecs_service",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "ecs_service",
            "simple_name": "aws_iam_role.ecs_service",
            "svg_id": "node_11",
            "type": "aws_iam_role"
        },
        {
            "cluster": "root",
            "definition": {
                "name": "tf_example_ecs_policy",
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:Describe*\",\n        \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",\n        \"elasticloadbalancing:DeregisterTargets\",\n        \"elasticloadbalancing:Describe*\",\n        \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",\n        \"elasticloadbalancing:RegisterTargets\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                "role": "${aws_iam_role.ecs_service.name}"
            },
            "group": 20000,
            "label": "[root] aws_iam_role_policy.ecs_service",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "ecs_service",
            "simple_name": "aws_iam_role_policy.ecs_service",
            "svg_id": "node_12",
            "type": "aws_iam_role_policy"
        },
        {
            "cluster": "root",
            "definition": {
                "name": "TfEcsExampleInstanceRole",
                "policy": "${data.template_file.instance_profile.rendered}",
                "role": "${aws_iam_role.app_instance.name}"
            },
            "group": 20000,
            "label": "[root] aws_iam_role_policy.instance",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "instance",
            "simple_name": "aws_iam_role_policy.instance",
            "svg_id": "node_13",
            "type": "aws_iam_role_policy"
        },
        {
            "cluster": "root",
            "definition": {
                "vpc_id": "${aws_vpc.main.id}"
            },
            "group": 20000,
            "label": "[root] aws_internet_gateway.gw",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "gw",
            "simple_name": "aws_internet_gateway.gw",
            "svg_id": "node_14",
            "type": "aws_internet_gateway"
        },
        {
            "cluster": "root",
            "definition": {
                "associate_public_ip_address": true,
                "iam_instance_profile": "${aws_iam_instance_profile.app.name}",
                "image_id": "${data.aws_ami.stable_coreos.id}",
                "instance_type": "${var.instance_type}",
                "key_name": "${var.key_name}",
                "lifecycle": {
                    "create_before_destroy": true
                },
                "security_groups": [
                    "${aws_security_group.instance_sg.id}"
                ],
                "user_data": "${data.template_file.cloud_config.rendered}"
            },
            "group": 20000,
            "label": "[root] aws_launch_configuration.app",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "app",
            "simple_name": "aws_launch_configuration.app",
            "svg_id": "node_15",
            "type": "aws_launch_configuration"
        },
        {
            "cluster": "root",
            "definition": {
                "route": {
                    "cidr_block": "0.0.0.0/0",
                    "gateway_id": "${aws_internet_gateway.gw.id}"
                },
                "vpc_id": "${aws_vpc.main.id}"
            },
            "group": 20000,
            "label": "[root] aws_route_table.r",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "r",
            "simple_name": "aws_route_table.r",
            "svg_id": "node_16",
            "type": "aws_route_table"
        },
        {
            "cluster": "root",
            "definition": {
                "count": "${var.az_count}",
                "route_table_id": "${aws_route_table.r.id}",
                "subnet_id": "${element(aws_subnet.main.*.id, count.index)}"
            },
            "group": 20000,
            "label": "[root] aws_route_table_association.a",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "a",
            "simple_name": "aws_route_table_association.a",
            "svg_id": "node_17",
            "type": "aws_route_table_association"
        },
        {
            "cluster": "root",
            "definition": {
                "description": "controls direct access to application instances",
                "egress": {
                    "cidr_blocks": [
                        "0.0.0.0/0"
                    ],
                    "from_port": 0,
                    "protocol": "-1",
                    "to_port": 0
                },
                "ingress": [
                    {
                        "cidr_blocks": [
                            "${var.admin_cidr_ingress}"
                        ],
                        "from_port": 22,
                        "protocol": "tcp",
                        "to_port": 22
                    },
                    {
                        "from_port": 8080,
                        "protocol": "tcp",
                        "security_groups": [
                            "${aws_security_group.lb_sg.id}"
                        ],
                        "to_port": 8080
                    }
                ],
                "name": "tf-ecs-instsg",
                "vpc_id": "${aws_vpc.main.id}"
            },
            "group": 20000,
            "label": "[root] aws_security_group.instance_sg",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "instance_sg",
            "simple_name": "aws_security_group.instance_sg",
            "svg_id": "node_18",
            "type": "aws_security_group"
        },
        {
            "cluster": "root",
            "definition": {
                "description": "controls access to the application ELB",
                "egress": {
                    "cidr_blocks": [
                        "0.0.0.0/0"
                    ],
                    "from_port": 0,
                    "protocol": "-1",
                    "to_port": 0
                },
                "ingress": {
                    "cidr_blocks": [
                        "0.0.0.0/0"
                    ],
                    "from_port": 80,
                    "protocol": "tcp",
                    "to_port": 80
                },
                "name": "tf-ecs-lbsg",
                "vpc_id": "${aws_vpc.main.id}"
            },
            "group": 20000,
            "label": "[root] aws_security_group.lb_sg",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "lb_sg",
            "simple_name": "aws_security_group.lb_sg",
            "svg_id": "node_19",
            "type": "aws_security_group"
        },
        {
            "cluster": "root",
            "definition": {
                "availability_zone": "${data.aws_availability_zones.available.names[count.index]}",
                "cidr_block": "${cidrsubnet(aws_vpc.main.cidr_block, 8, count.index)}",
                "count": "${var.az_count}",
                "vpc_id": "${aws_vpc.main.id}"
            },
            "group": 20000,
            "label": "[root] aws_subnet.main",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "main",
            "simple_name": "aws_subnet.main",
            "svg_id": "node_20",
            "type": "aws_subnet"
        },
        {
            "cluster": "root",
            "definition": {
                "cidr_block": "10.10.0.0/16"
            },
            "group": 20000,
            "label": "[root] aws_vpc.main",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "main",
            "simple_name": "aws_vpc.main",
            "svg_id": "node_21",
            "type": "aws_vpc"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] data.aws_ami.stable_coreos",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "stable_coreos",
            "simple_name": "data.aws_ami.stable_coreos",
            "svg_id": "node_22",
            "type": "aws_ami"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] data.aws_availability_zones.available",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "available",
            "simple_name": "data.aws_availability_zones.available",
            "svg_id": "node_23",
            "type": "aws_availability_zones"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] data.template_file.cloud_config",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "cloud_config",
            "simple_name": "data.template_file.cloud_config",
            "svg_id": "node_24",
            "type": "template_file"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] data.template_file.instance_profile",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "instance_profile",
            "simple_name": "data.template_file.instance_profile",
            "svg_id": "node_25",
            "type": "template_file"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] data.template_file.task_definition",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "task_definition",
            "simple_name": "data.template_file.task_definition",
            "svg_id": "node_26",
            "type": "template_file"
        },
        {
            "cluster": "root",
            "definition": {
                "region": "${var.aws_region}"
            },
            "group": 20000,
            "label": "[root] provider.aws",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "aws",
            "simple_name": "provider.aws",
            "svg_id": "node_27",
            "type": "provider"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] provider.template",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "template",
            "simple_name": "provider.template",
            "svg_id": "node_28",
            "type": "provider"
        },
        {
            "cluster": "cluster[root] aws_autoscaling_group.app_var_",
            "definition": {
                "default": "1",
                "description": "Desired numbers of servers in ASG"
            },
            "group": 20000,
            "label": "[root] var.asg_desired",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "asg_desired",
            "simple_name": "var.asg_desired",
            "svg_id": "node_29",
            "type": "var"
        },
        {
            "cluster": "cluster[root] aws_autoscaling_group.app_var_",
            "definition": {
                "default": "2",
                "description": "Max numbers of servers in ASG"
            },
            "group": 20000,
            "label": "[root] var.asg_max",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "asg_max",
            "simple_name": "var.asg_max",
            "svg_id": "node_30",
            "type": "var"
        },
        {
            "cluster": "cluster[root] aws_autoscaling_group.app_var_",
            "definition": {
                "default": "1",
                "description": "Min numbers of servers in ASG"
            },
            "group": 20000,
            "label": "[root] var.asg_min",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "asg_min",
            "simple_name": "var.asg_min",
            "svg_id": "node_31",
            "type": "var"
        },
        {
            "cluster": "cluster[root] aws_launch_configuration.app_var_",
            "definition": {
                "default": "t2.small",
                "description": "AWS instance type"
            },
            "group": 20000,
            "label": "[root] var.instance_type",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "instance_type",
            "simple_name": "var.instance_type",
            "svg_id": "node_32",
            "type": "var"
        },
        {
            "cluster": "cluster[root] aws_launch_configuration.app_var_",
            "definition": {
                "description": "Name of AWS key pair"
            },
            "group": 20000,
            "label": "[root] var.key_name",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "key_name",
            "simple_name": "var.key_name",
            "svg_id": "node_33",
            "type": "var"
        },
        {
            "cluster": "cluster[root] aws_security_group.instance_sg_var_",
            "definition": {
                "description": "CIDR to allow tcp/22 ingress to EC2 instance"
            },
            "group": 20000,
            "label": "[root] var.admin_cidr_ingress",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "admin_cidr_ingress",
            "simple_name": "var.admin_cidr_ingress",
            "svg_id": "node_34",
            "type": "var"
        },
        {
            "cluster": "cluster[root] aws_subnet.main_var_",
            "definition": {
                "default": "2",
                "description": "Number of AZs to cover in a given AWS region"
            },
            "group": 20000,
            "label": "[root] var.az_count",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "az_count",
            "simple_name": "var.az_count",
            "svg_id": "node_35",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] meta.count-boundary (count boundary fixup)",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "count-boundary",
            "simple_name": "meta.count-boundary (count boundary fixup)",
            "svg_id": "node_36",
            "type": "meta"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] aws_autoscaling_group.app",
            "definition": {
                "value": "${aws_autoscaling_group.app.id}"
            },
            "group": 20000,
            "label": "[root] output.asg_name",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "asg_name",
            "simple_name": "output.asg_name",
            "svg_id": "node_37",
            "type": "output"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] aws_alb.main",
            "definition": {
                "value": "${aws_alb.main.dns_name}"
            },
            "group": 20000,
            "label": "[root] output.elb_hostname",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "elb_hostname",
            "simple_name": "output.elb_hostname",
            "svg_id": "node_38",
            "type": "output"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] aws_security_group.instance_sg",
            "definition": {
                "value": "${aws_security_group.instance_sg.id}"
            },
            "group": 20000,
            "label": "[root] output.instance_security_group",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "instance_security_group",
            "simple_name": "output.instance_security_group",
            "svg_id": "node_39",
            "type": "output"
        },
        {
            "cluster": "cluster[root] meta.count-boundary (count boundary fixup)_output_[root] aws_launch_configuration.app",
            "definition": {
                "value": "${aws_launch_configuration.app.id}"
            },
            "group": 20000,
            "label": "[root] output.launch_configuration",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "launch_configuration",
            "simple_name": "output.launch_configuration",
            "svg_id": "node_40",
            "type": "output"
        },
        {
            "cluster": "root",
            "definition": {
                "region": "${var.aws_region}"
            },
            "group": 20000,
            "label": "[root] provider.aws (close)",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "aws",
            "simple_name": "provider.aws (close)",
            "svg_id": "node_41",
            "type": "provider"
        },
        {
            "cluster": "cluster[root] provider.aws_var_",
            "definition": {
                "default": "us-west-2",
                "description": "The AWS region to create things in."
            },
            "group": 20000,
            "label": "[root] var.aws_region",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "aws_region",
            "simple_name": "var.aws_region",
            "svg_id": "node_42",
            "type": "var"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] provider.template (close)",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "template",
            "simple_name": "provider.template (close)",
            "svg_id": "node_43",
            "type": "provider"
        },
        {
            "cluster": "root",
            "definition": "",
            "group": 20000,
            "label": "[root] root",
            "module": "root",
            "modules": [
                "root"
            ],
            "resource_name": "",
            "simple_name": "root",
            "svg_id": "node_44",
            "type": ""
        }
    ]
}
